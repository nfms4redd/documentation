{
    "docs": [
        {
            "location": "/", 
            "text": "Fecha\n\n\nAutores\n\n\n\n\n\n\n\n\n\n\n24 Junio 2013\n\n\nFernando Gonz\u00e1lez (\n)\n\n\n\n\n\n\n9  Enero 2018\n\n\nV\u00edctor Gonz\u00e1lez (\n)\n\n\n\n\n\n\n\n\n\u00a92013 FAO Forestry\n\n\nExcepto donde quede reflejado de otra manera, la presente documentaci\u00f3n se halla bajo licencia \nCreative Commons\n.\n\n\n\n\nEn esta documentaci\u00f3n veremos la instalaci\u00f3n y configuraci\u00f3n de los componentes necesarios para la diseminaci\u00f3n de datos espaciales. Los componentes fundamentales del sistema son:\n\n\n\n\nUna base de datos \nPostgreSQL\n.\n\n\nUna instancia de \nGeoServer\n (corriendo sobre Apache Tomcat).\n\n\nUna instancia del \nportal\n de diseminaci\u00f3n (corriendo sobre Apache Tomcat).\n\n\n\n\nEn el siguiente diagrama podemos observar estos componentes, junto con otros de m\u00e1s bajo nivel sobre los que se apoyan (Java, Apache, ...):\n\n\n\n\n\nPara poder instalar estos componentes, en esta documentaci\u00f3n asumimos que contamos con:\n\n\n\n\nLos \ndatos\n listos para su publicaci\u00f3n, tanto vectoriales (\nshapefiles\n) como raster (\nGeoTIFF\n).\n\n\nUn \nservidor Linux\n con acceso p\u00fablico a Internet y posibilidad de realizar tareas administrativas (instalaci\u00f3n, modificaci\u00f3n de ficheros, etc.) en dicho servidor.\n\n\n\n\nUna vez el sistema est\u00e9 instalado se podr\u00e1 conectar a los diferentes componentes de varias maneras:\n\n\n\n\nA \nGeoServer\n (\nHTTP\n) para configurar los servicios OGC, mapas, etc.\n\n\nAl \nportal\n (\nHTTP\n) para visualizar los datos.\n\n\nA la \nbase de datos\n (\nPostGIS\n) desde un cliente GIS (por ejemplo, QGIS) para visualizar y editar los datos.\n\n\nAl \nsistema operativo\n (\nSFTP\n) para transferencia de archivos de configuraci\u00f3n y/o recursos est\u00e1ticos (im\u00e1genes, iconos, etc.).\n\n\nAl \nsistema operativo\n (\nSSH\n) para realizar otras tareas administrativas (instalaci\u00f3n y configuraci\u00f3n de software, copias de seguridad, etc.).\n\n\n\n\nLos pasos a seguir para instalar el sistema son los siguientes:\n\n\n\n\nInventario\n.\n\n\nInstalaci\u00f3n del servidor.\n\n\nInstalaci\u00f3n con Docker\n.\n\n\nInstalaci\u00f3n con paquetes\n.\n\n\nCopias de seguridad\n.\n\n\nRendimiento\n.\n\n\n\n\n\n\nCarga de datos en PostGIS\n.\n\n\nPublicaci\u00f3n de datos en GeoServer\n.\n\n\nConfiguracion del Portal:\n\n\nConfiguraci\u00f3n del portal\n.\n\n\nConfiguracion de capas temporales\n.\n\n\nConfiguraci\u00f3n raster temporales\n.\n\n\n\n\n\n\nOptimizaciones\n.", 
            "title": "Introducci\u00f3n"
        }, 
        {
            "location": "/inventory/", 
            "text": "Fecha\n\n\nAutores\n\n\n\n\n\n\n\n\n\n\n24 Junio 2013\n\n\nFernando Gonz\u00e1lez (\n)\n\n\n\n\n\n\n9  Enero 2018\n\n\nV\u00edctor Gonz\u00e1lez (\n)\n\n\n\n\n\n\n\n\n\u00a92013 FAO Forestry\n\n\nExcepto donde quede reflejado de otra manera, la presente documentaci\u00f3n se halla bajo licencia \nCreative Commons\n.\n\n\n\n\nLo primero que deberemos hacer, antes de empezar a instalar el sistema, ser\u00e1 hacer un listado de los datos a publicar. Por cada capa que vayamos a publicar, deberemos indicar:\n\n\n\n\nFormato\n: GeoTIFF, ECW, SHP, etc.\n\n\nTama\u00f1o\n (aproximado): 1MB, 10MB, 100MB, 1GB, 10GB, etc.\n\n\nPeriodicidad de la actualizaci\u00f3n\n: Diario, mensual, anual, cada \nn\n a\u00f1os, etc..\n\n\nInstancias temporales\n (si las tiene):\n\n\n2005, 2007, 2011\n\n\nDiario desde 2002.\n\n\n...\n\n\n\n\n\n\nLeyenda\n (si se debe publicar con una leyenda espec\u00edfica): formato en que se puede exportar la leyenda (SLD, QGIS, ArcMap, etc.).\n\n\n\n\nEjemplos:\n\n\n\n\nOrtofotos\n\n\nFormato: GeoTIFF\n\n\nTama\u00f1o: 60MB\n\n\nPeriodicidad de la actualizaci\u00f3n: cada dos a\u00f1os.\n\n\nN\u00famero de instancias temporales: 2012, 2014, 2016, 2018.\n\n\nLeyenda: (ninguno)\n\n\n\n\n\n\nL\u00edmites administrativos\n\n\nFormato: SHP\n\n\nTama\u00f1o: 10MB\n\n\nPeriodicidad de la actualizaci\u00f3n: nunca.\n\n\nInstancias temporales: (ninguna).\n\n\nLeyenda: Fichero SLD", 
            "title": "Inventario"
        }, 
        {
            "location": "/install/docker/", 
            "text": "Fecha\n\n\nAutores\n\n\n\n\n\n\n\n\n\n\n9  Enero 2018\n\n\nV\u00edctor Gonz\u00e1lez (\n)\n\n\n\n\n\n\n\n\n\u00a92013 FAO Forestry\n\n\nExcepto donde quede reflejado de otra manera, la presente documentaci\u00f3n se halla bajo licencia \nCreative Commons\n.\n\n\n\n\nLa instalaci\u00f3n con \nDocker\n es muy sencilla y permite tener el sistema funcionando en muy pocos minutos.\n\n\nSin embargo, en algunos entornos no es posible utilizar Docker o la pol\u00edtica de sistemas lo impide. En tal caso, es posible \ninstalar el sistema mediante paquetes\n.\n\n\nInstalar Docker\n\n\nEn primer lugar, deberemos instalar \nDocker\n y \ndocker-compose\n en nuestro sistema.\n\n\nSe pueden encontrar unas instrucciones detalladas (para \nDocker\n y \ndocker-compose\n de la instalaci\u00f3n en su web:\n\n\nPara sistemas Ubuntu, existe un script que lo instala autom\u00e1ticamente. Basta con descargarlo y ejecutarlo:\n\n\nwget https://nfms4redd.github.io/documentation/install/docker/install.sh\nchmod +x install.sh\nsudo ./install.sh\n\n\n\n\n\nPara comprobar que se ha instalado correctamente podemos ejecutar:\n\n\ndocker --version\ndocker-compose --version\n\n\n\n\n\nArrancar el sistema NFMS\n\n\nPara arrancar el sistema NFMS con todos sus componentes basta con descargarse el script de arranque y ejecutarlo:\n\n\nwget https://nfms4redd.github.io/documentation/install/docker/setup.sh\nchmod +x setup.sh\nsudo ./setup.sh\n\n\n\n\n\n\n\nIMPORTANTE\n: Este script solo debe ejecutarse una vez. Para reiniciar los servicios habr\u00e1 que utilizar el comando \ndocker-compose\n como se explica \nm\u00e1s abajo\n.\n\n\n\n\nEl script proporciona varias opciones para cambiar la ruta en la que se despliega el portal, la aplicaci\u00f3n a desplegar o el usuario/contrase\u00f1a para la base de datos. Se pueden ver estas opciones con \n-h\n:\n\n\nsudo ./setup.sh -h\n\n\n\n\n\nUna vez el sistema est\u00e1 arrancado podemos acceder al portal en la URL (asumiendo que no se ha cambiado la ruta por defecto) \nhttp://localhost/portal\n.\n\n\nY GeoServer en \nhttp://localhost:8080/geoserver\n.\n\n\nReiniciar el sistema\n\n\nPara reiniciar el sistema basta con ir al directorio de instalaci\u00f3n (por defecto, \n/var/nfms\n) y reiniciar con \ndocker-compose\n:\n\n\ncd\n /var/nfms\ndocker-compose restart\n\n\n\n\n\nEn caso de querer reiniciar un solo componente (\ndb\n, \ngeoserver\n, o \nportal\n), basta con a\u00f1adir el nombre del componente al final:\n\n\ncd\n /var/nfms\ndocker-compose restart db\ndocker-compose restart geoserver\ndocker-compose restart portal\n\n\n\n\n\nVisualizar logs\n\n\nEs posible visualizar los logs de los diferentes componentes, tanto juntos:\n\n\ncd\n /var/nfms\ndocker-compose logs\n\n\n\n\n\ncomo componente a componente:\n\n\ncd\n /var/nfms\ndocker-compose logs db\ndocker-compose logs geoserver\ndocker-compose logs portal", 
            "title": "Instalaci\u00f3n con Docker"
        }, 
        {
            "location": "/install/docker/#instalar-docker", 
            "text": "En primer lugar, deberemos instalar  Docker  y  docker-compose  en nuestro sistema.  Se pueden encontrar unas instrucciones detalladas (para  Docker  y  docker-compose  de la instalaci\u00f3n en su web:  Para sistemas Ubuntu, existe un script que lo instala autom\u00e1ticamente. Basta con descargarlo y ejecutarlo:  wget https://nfms4redd.github.io/documentation/install/docker/install.sh\nchmod +x install.sh\nsudo ./install.sh  Para comprobar que se ha instalado correctamente podemos ejecutar:  docker --version\ndocker-compose --version", 
            "title": "Instalar Docker"
        }, 
        {
            "location": "/install/docker/#arrancar-el-sistema-nfms", 
            "text": "Para arrancar el sistema NFMS con todos sus componentes basta con descargarse el script de arranque y ejecutarlo:  wget https://nfms4redd.github.io/documentation/install/docker/setup.sh\nchmod +x setup.sh\nsudo ./setup.sh   IMPORTANTE : Este script solo debe ejecutarse una vez. Para reiniciar los servicios habr\u00e1 que utilizar el comando  docker-compose  como se explica  m\u00e1s abajo .   El script proporciona varias opciones para cambiar la ruta en la que se despliega el portal, la aplicaci\u00f3n a desplegar o el usuario/contrase\u00f1a para la base de datos. Se pueden ver estas opciones con  -h :  sudo ./setup.sh -h  Una vez el sistema est\u00e1 arrancado podemos acceder al portal en la URL (asumiendo que no se ha cambiado la ruta por defecto)  http://localhost/portal .  Y GeoServer en  http://localhost:8080/geoserver .", 
            "title": "Arrancar el sistema NFMS"
        }, 
        {
            "location": "/install/docker/#reiniciar-el-sistema", 
            "text": "Para reiniciar el sistema basta con ir al directorio de instalaci\u00f3n (por defecto,  /var/nfms ) y reiniciar con  docker-compose :  cd  /var/nfms\ndocker-compose restart  En caso de querer reiniciar un solo componente ( db ,  geoserver , o  portal ), basta con a\u00f1adir el nombre del componente al final:  cd  /var/nfms\ndocker-compose restart db\ndocker-compose restart geoserver\ndocker-compose restart portal", 
            "title": "Reiniciar el sistema"
        }, 
        {
            "location": "/install/docker/#visualizar-logs", 
            "text": "Es posible visualizar los logs de los diferentes componentes, tanto juntos:  cd  /var/nfms\ndocker-compose logs  como componente a componente:  cd  /var/nfms\ndocker-compose logs db\ndocker-compose logs geoserver\ndocker-compose logs portal", 
            "title": "Visualizar logs"
        }, 
        {
            "location": "/install/packages/", 
            "text": "Fecha\n\n\nAutores\n\n\n\n\n\n\n\n\n\n\n9  Enero 2018\n\n\nV\u00edctor Gonz\u00e1lez (\n)\n\n\n\n\n\n\n\n\n\u00a92013 FAO Forestry\n\n\nExcepto donde quede reflejado de otra manera, la presente documentaci\u00f3n se halla bajo licencia \nCreative Commons\n.\n\n\n\n\nPara la instalaci\u00f3n de todo el sistema mediante paquetes se asume la utilizaci\u00f3n de un servidor con Linux. En caso de no estar familiarizado con este sistema operativo, se recomienda leer antes una \nintroducci\u00f3n\n.\n\n\n\n\nNOTA\n: Esta gu\u00eda se ha realizado utilizando Ubuntu 16.04 (Xenial).\n\n\n\n\nPostgreSQL/PostGIS\n\n\nPara instalar PostgreSQL/PostGIS bastar\u00e1 con ejecutar:\n\n\napt update\napt install -y postgresql postgis\n\n\n\n\n\nUna vez la instalaci\u00f3n ha terminado habr\u00e1 que configurar el acceso desde el exterior de la m\u00e1quina. Para ello editaremos el fichero \n/etc/postgresql/\nversion\n/main/postgresql.conf\n y reemplazaremos la l\u00ednea:\n\n\n#listen_addresses = \nlocalhost\n\n\n\n\n\n\ncon:\n\n\nlisten_addresses = \n*\n\n\n\n\n\n\nEsto sirve para que PostgreSQL acepte conexiones de cualquier m\u00e1quina.\n\n\nPosteriormente a\u00f1adiremos esto al final del fichero \n/etc/postgresql/\nversion\n/main/pg_hba.conf\n:\n\n\nhost    all             all             0.0.0.0/0               md5\n\n\n\n\n\nque sirve para poder hacer login en la base de datos utilizando usuario y contrase\u00f1a desde cualquier m\u00e1quina.\n\n\nPor \u00faltimo arrancaremos el servicio:\n\n\nsystemctl \nenable\n postgresql\nservice postgresql start\n\n\n\n\n\nApache / Tomcat\n\n\nComo hemos visto en la \nintroducci\u00f3n\n, tanto GeoServer como el portal son aplicaciones web Java que se ejecutan en Tomcat. Por tanto, lo primero que tenemos que hacer es instalar Apache y Tomcat:\n\n\napt update\napt install -y tomcat8 apache2\n\n\n\n\n\ny arrancar los servicios:\n\n\nsystemctl \nenable\n tomcat8\nservice tomcat8 start\nsystemctl \nenable\n apache2\nservice apache2 start\n\n\n\n\n\nJAI\n\n\nLas librer\u00edas JAI son unas librer\u00edas Java para el procesado de im\u00e1genes que utiliza GeoServer. Para instalarlas, ejecutaremos los siguientes comandos:\n\n\ncd\n /usr/lib/jvm/java-8-*\nwget http://download.java.net/media/jai/builds/release/1_1_3/jai-1_1_3-lib-linux-amd64-jdk.bin\ntail -n +139 jai-1_1_3-lib-linux-amd64-jdk.bin \n INSTALL-jai\nchmod u+x INSTALL-jai\n./INSTALL-jai\nrm jai-1_1_3-lib-linux-amd64-jdk.bin INSTALL-jai *.txt\nwget http://download.java.net/media/jai-imageio/builds/release/1.1/jai_imageio-1_1-lib-linux-amd64-jdk.bin\ntail -n +215 jai_imageio-1_1-lib-linux-amd64-jdk.bin \n INSTALL-jai_imageio\nchmod u+x INSTALL-jai_imageio\n./INSTALL-jai_imageio\nrm jai_imageio-1_1-lib-linux-amd64-jdk.bin INSTALL-jai_imageio *.txt\n\n\n\n\n\nGeoServer\n\n\nDescargaremos GeoServer:\n\n\ncd\n /tmp\nwget http://sourceforge.net/projects/geoserver/files/GeoServer/2.12.1/geoserver-2.12.1-war.zip\n\n\n\n\n\ny lo desplegaremos en el directorio de aplicaciones de Tomcat:\n\n\nunzip geoserver-*-war.zip -d geoserver\nmv geoserver/geoserver.war /var/lib/tomcat8/webapps\nrm -rf geoserver*\n\n\n\n\n\nDirectorio de configuraci\u00f3n\n\n\nAl desplegar GeoServer, el directorio de datos de GeoServer por defecto est\u00e1 dentro del directorio de aplicaciones de Tomcat. Por ello, si no lo movemos de sitio, cada vez que actualicemos Tomcat o GeoServer, perderemos este directorio de datos. As\u00ed que primero moveremos el directorio por defecto a otra ruta:\n\n\nmv /var/lib/tomcat8/webapps/geoserver/data /var/local/geoserver\n\n\n\n\n\nY luego configuraremos ese directorio cambiando el valor de \nJAVA_OPTS\n en \n/etc/default/tomcat8\n por:\n\n\nJAVA_OPTS\n=\n-server -Djava.awt.headless=true -Xms768m -Xmx1560m -XX:+UseConcMarkSweepGC -XX:NewSize=48m -DGEOSERVER_DATA_DIR=/var/local/geoserver\n\n\n\n\n\n\nPor \u00faltimo, reiniciaremos Tomcat:\n\n\nservice tomcat8 restart\n\n\n\n\n\nPortal\n\n\nDescargaremos el portal en el directorio de aplicaciones de Tomcat:\n\n\nwget http://nullisland.geomati.co:8082/repository/snapshots/org/geoladris/apps/demo/7.0.0-SNAPSHOT/demo-7.0.0-SNAPSHOT.war -O /var/lib/tomcat8/webapps/portal.war\n\n\n\n\n\nDirectorio de configuraci\u00f3n\n\n\nEl portal tiene un directorio de configuraci\u00f3n que por defecto est\u00e1 dentro del directorio de aplicaciones de Tomcat. Por ello, si no lo movemos de sitio, cada vez que actualicemos Tomcat o el portal, perderemos su configuraci\u00f3n. As\u00ed que primero moveremos el directorio por defecto a otra ruta:\n\n\nmkdir /var/geoladris\nmv /var/lib/tomcat8/webapps/portal/WEB-INF/default_config /var/geoladris/portal\n\n\n\n\n\nY luego configuraremos ese directorio al final del fichero \n/etc/default/tomcat8\n:\n\n\nGEOLADRIS_CONFIG_DIR\n=\n/var/geoladris\n\n\n\n\n\nBase de datos\n\n\nEl portal tiene diferentes plugins que acceden a una base de datos para funcionar. Esta base de datos se configura en el fichero \n/etc/tomcat8/Catalina/localhost/portal.xml\n. En \u00e9l encontraremos un elemento \nResource\n con los datos de conexi\u00f3n de la base de datos (\nurl\n, \nusername\n y \npassword\n). En nuestro caso, deber\u00eda quedar algo as\u00ed:\n\n\nResource\n \nname=\njdbc/geoladris\n \nauth=\nContainer\n \ntype=\njavax.sql.DataSource\n\n          \ndriverClassName=\norg.postgresql.Driver\n\n          \nurl=\njdbc:postgresql://localhost:5432/nfms\n\n          \nusername=\nadmin\n \npassword=\nadmin\n\n          \nmaxActive=\n20\n \nmaxIdle=\n10\n \nmaxWait=\n-1\n \n/\n\n\n\n\n\n\nPor \u00faltimo, reiniciaremos Tomcat:\n\n\nservice tomcat8 restart\n\n\n\n\n\nConexi\u00f3n\n\n\nLlegados a este punto deber\u00edamos poder acceder al portal y a GeoServer desde un navegador en las siguientes URLs:\n\n\n\n\nhttp://\nservidor\n:8080/portal\n.\n\n\nhttp://\nservidor\n:8080/geoserver\n.\n\n\n\n\nPara eliminar el puerto \n:8080\n de la URL tendremos que habilitar un proxy de Apache:\n\n\na2enmod proxy_http\n\n\n\n\n\nconfigurarlo escribiendo el fichero \n/etc/apache2/mods-enabled/proxy_http.conf\n con el siguiente contenido:\n\n\nProxyPreserveHost On\nProxyPass /portal  http://localhost:8080/portal\nProxyPass /portal/ http://localhost:8080/portal/\nProxyPassReverse /portal  http://localhost:8080/portal\nProxyPassReverse /portal/ http://localhost:8080/portal/\nProxyPass /geoserver  http://localhost:8080/geoserver\nProxyPass /geoserver/ http://localhost:8080/geoserver/\nProxyPassReverse /geoserver  http://localhost:8080/geoserver\nProxyPassReverse /geoserver/ http://localhost:8080/geoserver/\n\n\n\n\n\ny por \u00faltimo, reiniciar Apache:\n\n\nservice apache2 restart\n\n\n\n\n\nVerificaci\u00f3n del despliegue\n\n\nCuando se reinicia Tomcat, se da el caso de que todas las aplicaciones se inicializan una detr\u00e1s de otra. Por tanto, el tiempo que tarda el portal en iniciarse depende de cu\u00e1ntas aplicaciones haya adem\u00e1s de \u00e9sta y de lo pesadas que sean. Por ejemplo, si tenemos GeoServer con muchos datos cargados, es probable que durante el reinicio de Tomcat el portal tome m\u00e1s tiempo que si estuviera s\u00f3lo.\n\n\nDesde este momento deber\u00edamos poder acceder al portal mediante un navegador en la URL \nhttp://\nservidor\n/portal\n. En el navegador podemos abrir las herramientas de desarrollo y verificar que en las pesta\u00f1as de \nConsola\n y \nRed\n no aparece ning\u00fan error.\n\n\nAdem\u00e1s, se puede verificar que la inicializaci\u00f3n del portal y la visualizaci\u00f3n en el navegador no han dado ning\u00fan error visualizando los logs. Cada vez que el portal se inicializa o se carga en un navegador, el sistema escribe informaci\u00f3n relevante en un fichero de log de Tomcat (\n/var/tomcat/logs/catalina.out\n). En \u00e9l deber\u00edamos encontrar algo como:\n\n\n2018\n-01-10 \n12\n:23:48 INFO  AppContextListener:133 - \n============================================================================\n\n\n2018\n-01-10 \n12\n:23:48 INFO  AppContextListener:134 - Configuration directory: /var/geoladris/portal\n\n2018\n-01-10 \n12\n:23:48 INFO  AppContextListener:135 - \n============================================================================\n\nJan \n10\n, \n2018\n \n12\n:23:48 PM org.apache.catalina.core.StandardContext reload\nINFO: Reloading Context with name \n[\n/portal\n]\n is completed\n\n\n\n\n\nEn caso de que haya alg\u00fan error nos encontraremos con algo as\u00ed:\n\n\nINFO: Despliegue del archivo portal.war de la aplicaci\u00f3n web\n\n2015\n-04-02 \n02\n:34:50 INFO  ConfigFolder:55 - \n============================================================================\n\n\n2015\n-04-02 \n02\n:34:50 INFO  ConfigFolder:56 - PORTAL_CONFIG_DIR: /var/argentina\n\n2015\n-04-02 \n02\n:34:50 INFO  ConfigFolder:57 - \n============================================================================\n\n\n2015\n-04-02 \n02\n:34:50 DEBUG ConfigFolder:73 - Reading portal properties file /var/argentina/portal.properties\n\n2015\n-04-02 \n02\n:34:50 DEBUG ConfigFolder:73 - Reading portal properties file /var/argentina/portal.properties\n\n2015\n-04-02 \n02\n:34:50 ERROR FeedbackContextListener:66 - Database error notifying the comment authors\norg.fao.unredd.portal.PersistenceException: Database error\n    at org.fao.unredd.portal.DBUtils.processConnection\n(\nDBUtils.java:41\n)\n\n    at org.fao.unredd.portal.DBUtils.processConnection\n(\nDBUtils.java:14\n)\n\n    at org.fao.unredd.feedback.DBFeedbackPersistence.getValidatedToNotifyInfo\n(\nDBFeedbackPersistence.java:122\n)\n\n    at org.fao.unredd.feedback.Feedback.notifyValidated\n(\nFeedback.java:83\n)\n\n    at org.fao.unredd.feedback.servlet.FeedbackContextListener\n$1\n.run\n(\nFeedbackContextListener.java:61\n)\n\n    at java.util.TimerThread.mainLoop\n(\nTimer.java:512\n)\n\n    at java.util.TimerThread.run\n(\nTimer.java:462\n)\n\nCaused by: org.apache.tomcat.dbcp.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory \n(\nConexi\u00f3n rechazada. Verifique que el nombre del Host y el puerto sean correctos y que postmaster este aceptando conexiones TCP/IP.\n)\n\n    at org.apache.tomcat.dbcp.dbcp.BasicDataSource.createPoolableConnectionFactory\n(\nBasicDataSource.java:1549\n)\n\n    at org.apache.tomcat.dbcp.dbcp.BasicDataSource.createDataSource\n(\nBasicDataSource.java:1388\n)\n\n    at org.apache.tomcat.dbcp.dbcp.BasicDataSource.getConnection\n(\nBasicDataSource.java:1044\n)\n\n    at org.fao.unredd.portal.DBUtils.processConnection\n(\nDBUtils.java:37\n)\n\n    ... \n6\n more\nCaused by: org.postgresql.util.PSQLException: Conexi\u00f3n rechazada. Verifique que el nombre del Host y el puerto sean correctos y que postmaster este aceptando conexiones TCP/IP.\n    at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl\n(\nConnectionFactoryImpl.java:215\n)\n\n    at org.postgresql.core.ConnectionFactory.openConnection\n(\nConnectionFactory.java:64\n)\n\n    at org.postgresql.jdbc2.AbstractJdbc2Connection.\ninit\n(\nAbstractJdbc2Connection.java:144\n)\n\n    at org.postgresql.jdbc3.AbstractJdbc3Connection.\ninit\n(\nAbstractJdbc3Connection.java:29\n)\n\n    at org.postgresql.jdbc3g.AbstractJdbc3gConnection.\ninit\n(\nAbstractJdbc3gConnection.java:21\n)\n\n    at org.postgresql.jdbc4.AbstractJdbc4Connection.\ninit\n(\nAbstractJdbc4Connection.java:31\n)\n\n    at org.postgresql.jdbc4.Jdbc4Connection.\ninit\n(\nJdbc4Connection.java:24\n)\n\n    at org.postgresql.Driver.makeConnection\n(\nDriver.java:410\n)\n\n    at org.postgresql.Driver.connect\n(\nDriver.java:280\n)\n\n    at org.apache.tomcat.dbcp.dbcp.DriverConnectionFactory.createConnection\n(\nDriverConnectionFactory.java:38\n)\n\n    at org.apache.tomcat.dbcp.dbcp.PoolableConnectionFactory.makeObject\n(\nPoolableConnectionFactory.java:582\n)\n\n    at org.apache.tomcat.dbcp.dbcp.BasicDataSource.validateConnectionFactory\n(\nBasicDataSource.java:1556\n)\n\n    at org.apache.tomcat.dbcp.dbcp.BasicDataSource.createPoolableConnectionFactory\n(\nBasicDataSource.java:1545\n)\n\n    ... \n9\n more\nCaused by: java.net.ConnectException: Connection refused\n    at java.net.PlainSocketImpl.socketConnect\n(\nNative Method\n)\n\n    at java.net.PlainSocketImpl.doConnect\n(\nPlainSocketImpl.java:351\n)\n\n    at java.net.PlainSocketImpl.connectToAddress\n(\nPlainSocketImpl.java:213\n)\n\n    at java.net.PlainSocketImpl.connect\n(\nPlainSocketImpl.java:200\n)\n\n    at java.net.SocksSocketImpl.connect\n(\nSocksSocketImpl.java:366\n)\n\n    at java.net.Socket.connect\n(\nSocket.java:529\n)\n\n    at org.postgresql.core.PGStream.\ninit\n(\nPGStream.java:61\n)\n\n    at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl\n(\nConnectionFactoryImpl.java:109\n)\n\n    ... \n21\n more", 
            "title": "Instalaci\u00f3n con paquetes"
        }, 
        {
            "location": "/install/packages/#postgresqlpostgis", 
            "text": "Para instalar PostgreSQL/PostGIS bastar\u00e1 con ejecutar:  apt update\napt install -y postgresql postgis  Una vez la instalaci\u00f3n ha terminado habr\u00e1 que configurar el acceso desde el exterior de la m\u00e1quina. Para ello editaremos el fichero  /etc/postgresql/ version /main/postgresql.conf  y reemplazaremos la l\u00ednea:  #listen_addresses =  localhost   con:  listen_addresses =  *   Esto sirve para que PostgreSQL acepte conexiones de cualquier m\u00e1quina.  Posteriormente a\u00f1adiremos esto al final del fichero  /etc/postgresql/ version /main/pg_hba.conf :  host    all             all             0.0.0.0/0               md5  que sirve para poder hacer login en la base de datos utilizando usuario y contrase\u00f1a desde cualquier m\u00e1quina.  Por \u00faltimo arrancaremos el servicio:  systemctl  enable  postgresql\nservice postgresql start", 
            "title": "PostgreSQL/PostGIS"
        }, 
        {
            "location": "/install/packages/#apache-tomcat", 
            "text": "Como hemos visto en la  introducci\u00f3n , tanto GeoServer como el portal son aplicaciones web Java que se ejecutan en Tomcat. Por tanto, lo primero que tenemos que hacer es instalar Apache y Tomcat:  apt update\napt install -y tomcat8 apache2  y arrancar los servicios:  systemctl  enable  tomcat8\nservice tomcat8 start\nsystemctl  enable  apache2\nservice apache2 start", 
            "title": "Apache / Tomcat"
        }, 
        {
            "location": "/install/packages/#jai", 
            "text": "Las librer\u00edas JAI son unas librer\u00edas Java para el procesado de im\u00e1genes que utiliza GeoServer. Para instalarlas, ejecutaremos los siguientes comandos:  cd  /usr/lib/jvm/java-8-*\nwget http://download.java.net/media/jai/builds/release/1_1_3/jai-1_1_3-lib-linux-amd64-jdk.bin\ntail -n +139 jai-1_1_3-lib-linux-amd64-jdk.bin   INSTALL-jai\nchmod u+x INSTALL-jai\n./INSTALL-jai\nrm jai-1_1_3-lib-linux-amd64-jdk.bin INSTALL-jai *.txt\nwget http://download.java.net/media/jai-imageio/builds/release/1.1/jai_imageio-1_1-lib-linux-amd64-jdk.bin\ntail -n +215 jai_imageio-1_1-lib-linux-amd64-jdk.bin   INSTALL-jai_imageio\nchmod u+x INSTALL-jai_imageio\n./INSTALL-jai_imageio\nrm jai_imageio-1_1-lib-linux-amd64-jdk.bin INSTALL-jai_imageio *.txt", 
            "title": "JAI"
        }, 
        {
            "location": "/install/packages/#geoserver", 
            "text": "Descargaremos GeoServer:  cd  /tmp\nwget http://sourceforge.net/projects/geoserver/files/GeoServer/2.12.1/geoserver-2.12.1-war.zip  y lo desplegaremos en el directorio de aplicaciones de Tomcat:  unzip geoserver-*-war.zip -d geoserver\nmv geoserver/geoserver.war /var/lib/tomcat8/webapps\nrm -rf geoserver*", 
            "title": "GeoServer"
        }, 
        {
            "location": "/install/packages/#directorio-de-configuracion", 
            "text": "Al desplegar GeoServer, el directorio de datos de GeoServer por defecto est\u00e1 dentro del directorio de aplicaciones de Tomcat. Por ello, si no lo movemos de sitio, cada vez que actualicemos Tomcat o GeoServer, perderemos este directorio de datos. As\u00ed que primero moveremos el directorio por defecto a otra ruta:  mv /var/lib/tomcat8/webapps/geoserver/data /var/local/geoserver  Y luego configuraremos ese directorio cambiando el valor de  JAVA_OPTS  en  /etc/default/tomcat8  por:  JAVA_OPTS = -server -Djava.awt.headless=true -Xms768m -Xmx1560m -XX:+UseConcMarkSweepGC -XX:NewSize=48m -DGEOSERVER_DATA_DIR=/var/local/geoserver   Por \u00faltimo, reiniciaremos Tomcat:  service tomcat8 restart", 
            "title": "Directorio de configuraci\u00f3n"
        }, 
        {
            "location": "/install/packages/#portal", 
            "text": "Descargaremos el portal en el directorio de aplicaciones de Tomcat:  wget http://nullisland.geomati.co:8082/repository/snapshots/org/geoladris/apps/demo/7.0.0-SNAPSHOT/demo-7.0.0-SNAPSHOT.war -O /var/lib/tomcat8/webapps/portal.war", 
            "title": "Portal"
        }, 
        {
            "location": "/install/packages/#directorio-de-configuracion_1", 
            "text": "El portal tiene un directorio de configuraci\u00f3n que por defecto est\u00e1 dentro del directorio de aplicaciones de Tomcat. Por ello, si no lo movemos de sitio, cada vez que actualicemos Tomcat o el portal, perderemos su configuraci\u00f3n. As\u00ed que primero moveremos el directorio por defecto a otra ruta:  mkdir /var/geoladris\nmv /var/lib/tomcat8/webapps/portal/WEB-INF/default_config /var/geoladris/portal  Y luego configuraremos ese directorio al final del fichero  /etc/default/tomcat8 :  GEOLADRIS_CONFIG_DIR = /var/geoladris", 
            "title": "Directorio de configuraci\u00f3n"
        }, 
        {
            "location": "/install/packages/#base-de-datos", 
            "text": "El portal tiene diferentes plugins que acceden a una base de datos para funcionar. Esta base de datos se configura en el fichero  /etc/tomcat8/Catalina/localhost/portal.xml . En \u00e9l encontraremos un elemento  Resource  con los datos de conexi\u00f3n de la base de datos ( url ,  username  y  password ). En nuestro caso, deber\u00eda quedar algo as\u00ed:  Resource   name= jdbc/geoladris   auth= Container   type= javax.sql.DataSource \n           driverClassName= org.postgresql.Driver \n           url= jdbc:postgresql://localhost:5432/nfms \n           username= admin   password= admin \n           maxActive= 20   maxIdle= 10   maxWait= -1   /   Por \u00faltimo, reiniciaremos Tomcat:  service tomcat8 restart", 
            "title": "Base de datos"
        }, 
        {
            "location": "/install/packages/#conexion", 
            "text": "Llegados a este punto deber\u00edamos poder acceder al portal y a GeoServer desde un navegador en las siguientes URLs:   http:// servidor :8080/portal .  http:// servidor :8080/geoserver .   Para eliminar el puerto  :8080  de la URL tendremos que habilitar un proxy de Apache:  a2enmod proxy_http  configurarlo escribiendo el fichero  /etc/apache2/mods-enabled/proxy_http.conf  con el siguiente contenido:  ProxyPreserveHost On\nProxyPass /portal  http://localhost:8080/portal\nProxyPass /portal/ http://localhost:8080/portal/\nProxyPassReverse /portal  http://localhost:8080/portal\nProxyPassReverse /portal/ http://localhost:8080/portal/\nProxyPass /geoserver  http://localhost:8080/geoserver\nProxyPass /geoserver/ http://localhost:8080/geoserver/\nProxyPassReverse /geoserver  http://localhost:8080/geoserver\nProxyPassReverse /geoserver/ http://localhost:8080/geoserver/  y por \u00faltimo, reiniciar Apache:  service apache2 restart", 
            "title": "Conexi\u00f3n"
        }, 
        {
            "location": "/install/packages/#verificacion-del-despliegue", 
            "text": "Cuando se reinicia Tomcat, se da el caso de que todas las aplicaciones se inicializan una detr\u00e1s de otra. Por tanto, el tiempo que tarda el portal en iniciarse depende de cu\u00e1ntas aplicaciones haya adem\u00e1s de \u00e9sta y de lo pesadas que sean. Por ejemplo, si tenemos GeoServer con muchos datos cargados, es probable que durante el reinicio de Tomcat el portal tome m\u00e1s tiempo que si estuviera s\u00f3lo.  Desde este momento deber\u00edamos poder acceder al portal mediante un navegador en la URL  http:// servidor /portal . En el navegador podemos abrir las herramientas de desarrollo y verificar que en las pesta\u00f1as de  Consola  y  Red  no aparece ning\u00fan error.  Adem\u00e1s, se puede verificar que la inicializaci\u00f3n del portal y la visualizaci\u00f3n en el navegador no han dado ning\u00fan error visualizando los logs. Cada vez que el portal se inicializa o se carga en un navegador, el sistema escribe informaci\u00f3n relevante en un fichero de log de Tomcat ( /var/tomcat/logs/catalina.out ). En \u00e9l deber\u00edamos encontrar algo como:  2018 -01-10  12 :23:48 INFO  AppContextListener:133 -  ============================================================================  2018 -01-10  12 :23:48 INFO  AppContextListener:134 - Configuration directory: /var/geoladris/portal 2018 -01-10  12 :23:48 INFO  AppContextListener:135 -  ============================================================================ \nJan  10 ,  2018   12 :23:48 PM org.apache.catalina.core.StandardContext reload\nINFO: Reloading Context with name  [ /portal ]  is completed  En caso de que haya alg\u00fan error nos encontraremos con algo as\u00ed:  INFO: Despliegue del archivo portal.war de la aplicaci\u00f3n web 2015 -04-02  02 :34:50 INFO  ConfigFolder:55 -  ============================================================================  2015 -04-02  02 :34:50 INFO  ConfigFolder:56 - PORTAL_CONFIG_DIR: /var/argentina 2015 -04-02  02 :34:50 INFO  ConfigFolder:57 -  ============================================================================  2015 -04-02  02 :34:50 DEBUG ConfigFolder:73 - Reading portal properties file /var/argentina/portal.properties 2015 -04-02  02 :34:50 DEBUG ConfigFolder:73 - Reading portal properties file /var/argentina/portal.properties 2015 -04-02  02 :34:50 ERROR FeedbackContextListener:66 - Database error notifying the comment authors\norg.fao.unredd.portal.PersistenceException: Database error\n    at org.fao.unredd.portal.DBUtils.processConnection ( DBUtils.java:41 ) \n    at org.fao.unredd.portal.DBUtils.processConnection ( DBUtils.java:14 ) \n    at org.fao.unredd.feedback.DBFeedbackPersistence.getValidatedToNotifyInfo ( DBFeedbackPersistence.java:122 ) \n    at org.fao.unredd.feedback.Feedback.notifyValidated ( Feedback.java:83 ) \n    at org.fao.unredd.feedback.servlet.FeedbackContextListener $1 .run ( FeedbackContextListener.java:61 ) \n    at java.util.TimerThread.mainLoop ( Timer.java:512 ) \n    at java.util.TimerThread.run ( Timer.java:462 ) \nCaused by: org.apache.tomcat.dbcp.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory  ( Conexi\u00f3n rechazada. Verifique que el nombre del Host y el puerto sean correctos y que postmaster este aceptando conexiones TCP/IP. ) \n    at org.apache.tomcat.dbcp.dbcp.BasicDataSource.createPoolableConnectionFactory ( BasicDataSource.java:1549 ) \n    at org.apache.tomcat.dbcp.dbcp.BasicDataSource.createDataSource ( BasicDataSource.java:1388 ) \n    at org.apache.tomcat.dbcp.dbcp.BasicDataSource.getConnection ( BasicDataSource.java:1044 ) \n    at org.fao.unredd.portal.DBUtils.processConnection ( DBUtils.java:37 ) \n    ...  6  more\nCaused by: org.postgresql.util.PSQLException: Conexi\u00f3n rechazada. Verifique que el nombre del Host y el puerto sean correctos y que postmaster este aceptando conexiones TCP/IP.\n    at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl ( ConnectionFactoryImpl.java:215 ) \n    at org.postgresql.core.ConnectionFactory.openConnection ( ConnectionFactory.java:64 ) \n    at org.postgresql.jdbc2.AbstractJdbc2Connection. init ( AbstractJdbc2Connection.java:144 ) \n    at org.postgresql.jdbc3.AbstractJdbc3Connection. init ( AbstractJdbc3Connection.java:29 ) \n    at org.postgresql.jdbc3g.AbstractJdbc3gConnection. init ( AbstractJdbc3gConnection.java:21 ) \n    at org.postgresql.jdbc4.AbstractJdbc4Connection. init ( AbstractJdbc4Connection.java:31 ) \n    at org.postgresql.jdbc4.Jdbc4Connection. init ( Jdbc4Connection.java:24 ) \n    at org.postgresql.Driver.makeConnection ( Driver.java:410 ) \n    at org.postgresql.Driver.connect ( Driver.java:280 ) \n    at org.apache.tomcat.dbcp.dbcp.DriverConnectionFactory.createConnection ( DriverConnectionFactory.java:38 ) \n    at org.apache.tomcat.dbcp.dbcp.PoolableConnectionFactory.makeObject ( PoolableConnectionFactory.java:582 ) \n    at org.apache.tomcat.dbcp.dbcp.BasicDataSource.validateConnectionFactory ( BasicDataSource.java:1556 ) \n    at org.apache.tomcat.dbcp.dbcp.BasicDataSource.createPoolableConnectionFactory ( BasicDataSource.java:1545 ) \n    ...  9  more\nCaused by: java.net.ConnectException: Connection refused\n    at java.net.PlainSocketImpl.socketConnect ( Native Method ) \n    at java.net.PlainSocketImpl.doConnect ( PlainSocketImpl.java:351 ) \n    at java.net.PlainSocketImpl.connectToAddress ( PlainSocketImpl.java:213 ) \n    at java.net.PlainSocketImpl.connect ( PlainSocketImpl.java:200 ) \n    at java.net.SocksSocketImpl.connect ( SocksSocketImpl.java:366 ) \n    at java.net.Socket.connect ( Socket.java:529 ) \n    at org.postgresql.core.PGStream. init ( PGStream.java:61 ) \n    at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl ( ConnectionFactoryImpl.java:109 ) \n    ...  21  more", 
            "title": "Verificaci\u00f3n del despliegue"
        }, 
        {
            "location": "/install/backups/", 
            "text": "Fecha\n\n\nAutores\n\n\n\n\n\n\n\n\n\n\n10 Octubre 2014\n\n\nFernando Gonz\u00e1lez (\n)\n\n\n\n\n\n\n9  Enero 2018\n\n\nV\u00edctor Gonz\u00e1lez (\n)\n\n\n\n\n\n\n\n\n\u00a92013 FAO Forestry\n\n\nExcepto donde quede reflejado de otra manera, la presente documentaci\u00f3n se halla bajo licencia \nCreative Commons\n.\n\n\n\n\nPostgreSQL\n\n\nVer documentaci\u00f3n en \nGeoTalleres\n.\n\n\nGeoServer\n\n\nVer documentaci\u00f3n en \nGeoTalleres\n, teniendo en cuenta que la instalaci\u00f3n est\u00e1ndar del sistema establece \n/var/nfms/geoserver\n como directorio de datos de GeoServer.\n\n\nPortal\n\n\nLas copias de seguridad de la configuraci\u00f3n del portal son muy similares a las de GeoServer ya que la configuraci\u00f3n est\u00e1 almacenada tambi\u00e9n en un directorio, generalmente \n/var/nfms/geoladris\n.\n\n\nAdem\u00e1s, es conveniente guardar una copia del fichero \n.war\n del portal, de forma que se pueda repetir la instalaci\u00f3n utilizando exactamente el mismo software en caso necesario.\n\n\nPara realizar una copia de seguridad, es necesario copiar este directorio, comprimido por comodidad y optimizaci\u00f3n de espacio, a alg\u00fan lugar fuera del servidor. Los siguientes comandos crear\u00edan una copia de la configuraci\u00f3n en el fichero \n/tmp/portal-backup.tar.gz\n:\n\n\ncd\n /var/nfms/geoladris\ntar -czvf /tmp/portal-backup.tar.gz *\n\n\n\n\n\nLas opciones \n-czvf\n especificadas significan:\n\n\n\n\nc: crear\n\n\nz: comprimir en zip\n\n\nv: verbose, muestra por pantalla los ficheros que se incluyen en la copia de seguridad\n\n\nf: fichero resultante, especificado a continuaci\u00f3n\n\n\n\n\n\n\nIMPORTANTE\n: Se deben guardar los ficheros con la copia de seguridad en una m\u00e1quina distinta al servidor que alberga el portal, ya que en caso de que haya alg\u00fan problema con dicha m\u00e1quina se pueden perder tambi\u00e9n las copias.\n\n\n\n\nPara recuperar la configuraci\u00f3n s\u00f3lo tenemos que reemplazar el directorio \n/var/nfms/geoladris\n por los contenidos del fichero que contiene la copia. Para ello se puede descomprimir la copia de seguridad en un directorio temporal:\n\n\nmkdir /tmp/copia\ntar -xzvf /tmp/portal-backup.tgz --directory\n=\n/tmp/copia\n\n\n\n\n\nA diferencia del comando \ntar\n que utilizamos para crear la copia de seguridad, ahora estamos usando la opci\u00f3n \nx\n (extraer) en lugar de \nc\n (crear) y estamos especificando con la opci\u00f3n \n--directory\n que queremos extraer la copia en el directorio \n/tmp/copia\n.\n\n\nUna vez descomprimido s\u00f3lo hay que reemplazar los contenidos del directorio \n/var/nfms/geoladris\n por los del directorio \n/tmp/copia\n. Por seguridad, mantendremos los contenidos anteriores en \n/tmp\n:\n\n\nsudo mv /var/nfms/geoladris /tmp/geoladris.bak\nsudo mv /tmp/copia /var/nfms/geoladris\n\n\n\n\n\nPor \u00faltimo quedar\u00eda reiniciar el portal:\n\n\ncd\n /var/nfms\ndocker-compose restart portal\n\n\n\n\n\no, si se ha instalado mediante paquetes:\n\n\nsudo service tomcat7 restart", 
            "title": "Copias de seguridad"
        }, 
        {
            "location": "/install/backups/#postgresql", 
            "text": "Ver documentaci\u00f3n en  GeoTalleres .", 
            "title": "PostgreSQL"
        }, 
        {
            "location": "/install/backups/#geoserver", 
            "text": "Ver documentaci\u00f3n en  GeoTalleres , teniendo en cuenta que la instalaci\u00f3n est\u00e1ndar del sistema establece  /var/nfms/geoserver  como directorio de datos de GeoServer.", 
            "title": "GeoServer"
        }, 
        {
            "location": "/install/backups/#portal", 
            "text": "Las copias de seguridad de la configuraci\u00f3n del portal son muy similares a las de GeoServer ya que la configuraci\u00f3n est\u00e1 almacenada tambi\u00e9n en un directorio, generalmente  /var/nfms/geoladris .  Adem\u00e1s, es conveniente guardar una copia del fichero  .war  del portal, de forma que se pueda repetir la instalaci\u00f3n utilizando exactamente el mismo software en caso necesario.  Para realizar una copia de seguridad, es necesario copiar este directorio, comprimido por comodidad y optimizaci\u00f3n de espacio, a alg\u00fan lugar fuera del servidor. Los siguientes comandos crear\u00edan una copia de la configuraci\u00f3n en el fichero  /tmp/portal-backup.tar.gz :  cd  /var/nfms/geoladris\ntar -czvf /tmp/portal-backup.tar.gz *  Las opciones  -czvf  especificadas significan:   c: crear  z: comprimir en zip  v: verbose, muestra por pantalla los ficheros que se incluyen en la copia de seguridad  f: fichero resultante, especificado a continuaci\u00f3n    IMPORTANTE : Se deben guardar los ficheros con la copia de seguridad en una m\u00e1quina distinta al servidor que alberga el portal, ya que en caso de que haya alg\u00fan problema con dicha m\u00e1quina se pueden perder tambi\u00e9n las copias.   Para recuperar la configuraci\u00f3n s\u00f3lo tenemos que reemplazar el directorio  /var/nfms/geoladris  por los contenidos del fichero que contiene la copia. Para ello se puede descomprimir la copia de seguridad en un directorio temporal:  mkdir /tmp/copia\ntar -xzvf /tmp/portal-backup.tgz --directory = /tmp/copia  A diferencia del comando  tar  que utilizamos para crear la copia de seguridad, ahora estamos usando la opci\u00f3n  x  (extraer) en lugar de  c  (crear) y estamos especificando con la opci\u00f3n  --directory  que queremos extraer la copia en el directorio  /tmp/copia .  Una vez descomprimido s\u00f3lo hay que reemplazar los contenidos del directorio  /var/nfms/geoladris  por los del directorio  /tmp/copia . Por seguridad, mantendremos los contenidos anteriores en  /tmp :  sudo mv /var/nfms/geoladris /tmp/geoladris.bak\nsudo mv /tmp/copia /var/nfms/geoladris  Por \u00faltimo quedar\u00eda reiniciar el portal:  cd  /var/nfms\ndocker-compose restart portal  o, si se ha instalado mediante paquetes:  sudo service tomcat7 restart", 
            "title": "Portal"
        }, 
        {
            "location": "/install/performance/", 
            "text": "Fecha\n\n\nAutores\n\n\n\n\n\n\n\n\n\n\n2  Julio 2015\n\n\nOscar Fonts (\n)\n\n\n\n\n\n\n9  Enero 2018\n\n\nV\u00edctor Gonz\u00e1lez (\n)\n\n\n\n\n\n\n\n\n\u00a92013 FAO Forestry\n\n\nExcepto donde quede reflejado de otra manera, la presente documentaci\u00f3n se halla bajo licencia \nCreative Commons\n.\n\n\n\n\nEsta lista de buenas pr\u00e1cticas se basa en la experiencia de m\u00faltiples instalaciones de GeoServer a lo largo de los a\u00f1os.\n\n\nPretende repasar las cuestiones b\u00e1sicas a tener en cuenta para un rendimiento aceptable de GeoServer, pero es una lista conservadora y razonable: No se han considerado situaciones excepcionales, ni se ha tratado de optimizar a toda costa. Se ha preferido conservar una instalaci\u00f3n y mantenimiento lo m\u00e1s f\u00e1ciles posible.\n\n\nEsta lista se puede ir modificando o ampliando con todo aquello que se considere \u00fatil como buena pr\u00e1ctica general. Los detalles sobre c\u00f3mo realizar cada tarea est\u00e1n detallados a lo largo de este mismo manual.\n\n\n\n\nPara casos en que sea necesario profundizar: \nGeoServer on Steroids\n.\n\n\n\n\nRequisitos Hardware\n\n\n\n\nAl menos 2 GB de RAM, hasta 4 si es posible.\n\n\n4 n\u00facleos de procesador.\n\n\nSi es posible, usar un disco lo m\u00e1s r\u00e1pido posible (SSD local) para almacenar los datos y especialmente la GeoWebCache.\n\n\n\n\nSistema Operativo\n\n\n\n\nUtilizar versi\u00f3n m\u00e1s reciente de Ubuntu LTS: Ubuntu 14.04 Server 64 bits.\n\n\nMantener actualizados los paquetes de sistema (apt-get upgrade \n apt-get update).\n\n\nActivar la actualizaciones autom\u00e1ticas (unattended-upgrades).\n\n\nInstalar todo lo que sea posible del gestor de paquetes del propio SO (evitar en lo posible instalaciones manuales y repositorios de terceros).\n\n\n\n\nPaquetes de Software\n\n\n\n\nInstalar GDAL (1.10)\n\n\nInstalar PostgreSQL (9.3) y PostGIS (2.1)\n\n\nUsar OpenJDK 7. Instalar manualmente las JAI e ImageIO nativas.\n\n\nInstalar Tomcat7 y configurar el /etc/default/tomcat convenientemente, reservando hasta 2 GB para la JVM, pero nunca m\u00e1s de la disponible, o el swapping nos arruinar\u00e1 el rendimiento).\n\n\nUsar la \u00faltima versi\u00f3n de GeoServer 'stable'.\n\n\n\n\nConfiguraci\u00f3n GeoServer\n\n\n\n\nComprobar que el Data directory apunta a la ubicaci\u00f3n deseada (t\u00edpicamnete, /var/geoserver).\n\n\nComprobar que la JVM que se est\u00e1 usando es la deseada (OpenJDK 7).\n\n\nComprobar que native JAI y Native JAI ImageIO est\u00e1n a \"true\".\n\n\nDeshabilitar los servicios que no vayan a usarse.\n\n\nBorrar todos los workspaces, styles, datasources y layers que no se usen (t\u00edpicamente, los que vienen de ejemplo).\n\n\nConfigurar el logging a \"PRODUCTION_LOGGING\".\n\n\nLimitar el n\u00famero de SRS del servicio WMS.\n\n\n\n\nHabilitar la creaci\u00f3n de cach\u00e9s en EPSG:900913 por defecto, donde:\n\n\n\n\n\n\nLas capas Raster se cachear\u00e1n en JPEG.\n\n\n\n\nLas capas Vectoriales se cachear\u00e1n en PNG8.\n\n\nLos grupos de capas se cachear\u00e1n en ambos formatos (JPEG, PNG8).\n\n\nSi alguna capa r\u00e1ster requiere de transparencia, se cambiar\u00e1 la configuraci\u00f3n de GWC de JPEG a PNG8 s\u00f3lo para \u00e9sa capa.\n\n\n\n\nDatos Vectoriales\n\n\n\n\n\n\nLimpiar y simplificar los datos previamente:\n\n\n\n\n\n\nEs preferible varios pol\u00edgonos independientes que un s\u00f3lo multipol\u00edgono muy complejo.\n\n\n\n\nEvitar solapamiento y errores topol\u00f3gicos.\n\n\nSimplificar las geometr\u00edas hasta una resoluci\u00f3n lo suficientemente buena. Para geometr\u00edas muy detalladas, utilizar diferentes resoluciones a diferentes escalas.\n\n\n\n\nReproyectar al CRS en que se vayan a consumir m\u00e1s habitualmente los datos (para el Portal, EPSG:3857).\n\n\n\n\n\n\nAsegurarse que los datos est\u00e1n bien indexados:\n\n\n\n\n\n\nAl importar los datos, utilizar la opci\u00f3n -I de shp2pgsql para generar autom\u00e1ticamente un \u00edndice espacial.\n\n\n\n\nO bien, para datos ya cargados, comprobar que existe un \u00edndice o crearlo con CREATE INDEX [...] USING GIST.\n\n\nIndexar tambi\u00e9n otros campos por los que se filtre habitualmente.\n\n\n\n\nComprobar que las tablas tienen definida una Primary Key (o, de no ser posible, activar OIDS para esa tabla).\n\n\n\n\n\n\nTras actualizar una capa vectorial, ejecutar un VACUUM ANALYZE. Para capas que se editen cont\u00ednuamente, programar la ejecuci\u00f3n peri\u00f3dica de VACUUM ANALYZE.\n\n\n\n\n\n\n\n\nSi GeoServer debe acceder a una Base de Datos PostGIS remota (alojada en otra m\u00e1quina), asegurarse de que la conexi\u00f3n de red entre ambas m\u00e1quinas es de excelente calidad, y si puede ser dedicada: la transferencia de datos va a ser masiva.\n\n\n\n\nDatos Raster\n\n\n\n\nUsar el tipo de dato para cada celda lo m\u00e1s compacto posible. Por ejemplo, para un DEM quiz\u00e1 baste con un tipo Integer, y no haga falta un Double. El tipo Byte, con valores entre 0 y 255, suele ser m\u00e1s que suficiente para clasificaciones con unas pocas categor\u00edas, \u00edndices de vegetaci\u00f3n, o indicadores en tanto por ciento.\n\n\nReproyectar al CRS en que se vayan a consumir m\u00e1s habitualmente los datos (para el Portal, EPSG:3857), y recortar a la zona de inter\u00e9s (gdalwarp, gdalinfo).\n\n\nConvertir los datos a GeoTIFF sin comprimir, con tiling interno y con overviews (gdal_translate, gdaladdo).\n\n\nCada fichero GeoTIFF deber\u00eda rondar los 2 GB. Para mosaicos, trocear en caso de que pasen de 4 GB, o agrupar si quedan por debajo de 1 GB.\n\n\nPara coberturas enormes (por ejemplo, ortofoto nacional de gran resoluci\u00f3n), hay que aplicar t\u00e9cnicas excepcionales: compresi\u00f3n interna JPEG, ImagePyramid.\n\n\n\n\n\n\nNo se recomienda que los datos raster (habitualmente GEOSERVER_DATA_DIR) est\u00e9n en una unidad remota, puesto que la transferencia de datos para GeoTIFF sin comprimir es todav\u00eda m\u00e1s masiva que en el caso de datos vectoriales.", 
            "title": "Rendimiento"
        }, 
        {
            "location": "/install/performance/#requisitos-hardware", 
            "text": "Al menos 2 GB de RAM, hasta 4 si es posible.  4 n\u00facleos de procesador.  Si es posible, usar un disco lo m\u00e1s r\u00e1pido posible (SSD local) para almacenar los datos y especialmente la GeoWebCache.", 
            "title": "Requisitos Hardware"
        }, 
        {
            "location": "/install/performance/#sistema-operativo", 
            "text": "Utilizar versi\u00f3n m\u00e1s reciente de Ubuntu LTS: Ubuntu 14.04 Server 64 bits.  Mantener actualizados los paquetes de sistema (apt-get upgrade   apt-get update).  Activar la actualizaciones autom\u00e1ticas (unattended-upgrades).  Instalar todo lo que sea posible del gestor de paquetes del propio SO (evitar en lo posible instalaciones manuales y repositorios de terceros).", 
            "title": "Sistema Operativo"
        }, 
        {
            "location": "/install/performance/#paquetes-de-software", 
            "text": "Instalar GDAL (1.10)  Instalar PostgreSQL (9.3) y PostGIS (2.1)  Usar OpenJDK 7. Instalar manualmente las JAI e ImageIO nativas.  Instalar Tomcat7 y configurar el /etc/default/tomcat convenientemente, reservando hasta 2 GB para la JVM, pero nunca m\u00e1s de la disponible, o el swapping nos arruinar\u00e1 el rendimiento).  Usar la \u00faltima versi\u00f3n de GeoServer 'stable'.", 
            "title": "Paquetes de Software"
        }, 
        {
            "location": "/install/performance/#configuracion-geoserver", 
            "text": "Comprobar que el Data directory apunta a la ubicaci\u00f3n deseada (t\u00edpicamnete, /var/geoserver).  Comprobar que la JVM que se est\u00e1 usando es la deseada (OpenJDK 7).  Comprobar que native JAI y Native JAI ImageIO est\u00e1n a \"true\".  Deshabilitar los servicios que no vayan a usarse.  Borrar todos los workspaces, styles, datasources y layers que no se usen (t\u00edpicamente, los que vienen de ejemplo).  Configurar el logging a \"PRODUCTION_LOGGING\".  Limitar el n\u00famero de SRS del servicio WMS.   Habilitar la creaci\u00f3n de cach\u00e9s en EPSG:900913 por defecto, donde:    Las capas Raster se cachear\u00e1n en JPEG.   Las capas Vectoriales se cachear\u00e1n en PNG8.  Los grupos de capas se cachear\u00e1n en ambos formatos (JPEG, PNG8).  Si alguna capa r\u00e1ster requiere de transparencia, se cambiar\u00e1 la configuraci\u00f3n de GWC de JPEG a PNG8 s\u00f3lo para \u00e9sa capa.", 
            "title": "Configuraci\u00f3n GeoServer"
        }, 
        {
            "location": "/install/performance/#datos-vectoriales", 
            "text": "Limpiar y simplificar los datos previamente:    Es preferible varios pol\u00edgonos independientes que un s\u00f3lo multipol\u00edgono muy complejo.   Evitar solapamiento y errores topol\u00f3gicos.  Simplificar las geometr\u00edas hasta una resoluci\u00f3n lo suficientemente buena. Para geometr\u00edas muy detalladas, utilizar diferentes resoluciones a diferentes escalas.   Reproyectar al CRS en que se vayan a consumir m\u00e1s habitualmente los datos (para el Portal, EPSG:3857).    Asegurarse que los datos est\u00e1n bien indexados:    Al importar los datos, utilizar la opci\u00f3n -I de shp2pgsql para generar autom\u00e1ticamente un \u00edndice espacial.   O bien, para datos ya cargados, comprobar que existe un \u00edndice o crearlo con CREATE INDEX [...] USING GIST.  Indexar tambi\u00e9n otros campos por los que se filtre habitualmente.   Comprobar que las tablas tienen definida una Primary Key (o, de no ser posible, activar OIDS para esa tabla).    Tras actualizar una capa vectorial, ejecutar un VACUUM ANALYZE. Para capas que se editen cont\u00ednuamente, programar la ejecuci\u00f3n peri\u00f3dica de VACUUM ANALYZE.     Si GeoServer debe acceder a una Base de Datos PostGIS remota (alojada en otra m\u00e1quina), asegurarse de que la conexi\u00f3n de red entre ambas m\u00e1quinas es de excelente calidad, y si puede ser dedicada: la transferencia de datos va a ser masiva.", 
            "title": "Datos Vectoriales"
        }, 
        {
            "location": "/install/performance/#datos-raster", 
            "text": "Usar el tipo de dato para cada celda lo m\u00e1s compacto posible. Por ejemplo, para un DEM quiz\u00e1 baste con un tipo Integer, y no haga falta un Double. El tipo Byte, con valores entre 0 y 255, suele ser m\u00e1s que suficiente para clasificaciones con unas pocas categor\u00edas, \u00edndices de vegetaci\u00f3n, o indicadores en tanto por ciento.  Reproyectar al CRS en que se vayan a consumir m\u00e1s habitualmente los datos (para el Portal, EPSG:3857), y recortar a la zona de inter\u00e9s (gdalwarp, gdalinfo).  Convertir los datos a GeoTIFF sin comprimir, con tiling interno y con overviews (gdal_translate, gdaladdo).  Cada fichero GeoTIFF deber\u00eda rondar los 2 GB. Para mosaicos, trocear en caso de que pasen de 4 GB, o agrupar si quedan por debajo de 1 GB.  Para coberturas enormes (por ejemplo, ortofoto nacional de gran resoluci\u00f3n), hay que aplicar t\u00e9cnicas excepcionales: compresi\u00f3n interna JPEG, ImagePyramid.    No se recomienda que los datos raster (habitualmente GEOSERVER_DATA_DIR) est\u00e9n en una unidad remota, puesto que la transferencia de datos para GeoTIFF sin comprimir es todav\u00eda m\u00e1s masiva que en el caso de datos vectoriales.", 
            "title": "Datos Raster"
        }, 
        {
            "location": "/postgis/", 
            "text": "Fecha\n\n\nAutores\n\n\n\n\n\n\n\n\n\n\n9  Enero 2018\n\n\nV\u00edctor Gonz\u00e1lez (\n)\n\n\n\n\n\n\n15 Enero 2018\n\n\nMicho Garc\u00eda (\n)\n\n\n\n\n\n\n\n\n\u00a92013 FAO Forestry\n\n\nExcepto donde quede reflejado de otra manera, la presente documentaci\u00f3n se halla bajo licencia \nCreative Commons\n.\n\n\n\n\nEnlaces a geotalleres\n\n\nConfiguraci\u00f3n inicial\n\n\nUna vez el servicio est\u00e1 funcionando, crearemos una nueva base de datos:\n\n\nsudo -u postgres createdb nfms\n\n\n\n\n\ny conectaremos a ella:\n\n\nsudo -u postgres psql -d nfms\n\n\n\n\n\nEstando conectados deberemos activar PostGIS en nuestra base de datos:\n\n\nCREATE EXTENSION postgis\n;\n\n\n\n\n\n\ny crear dos usuarios, uno para administraci\u00f3n y otro s\u00f3lo para lectura (\n\u00a1es importante cambiar las contrase\u00f1as por otras m\u00e1s seguras!\n):\n\n\nCREATE ROLE admin WITH LOGIN CREATEROLE PASSWORD \nadmin\n;\n\nCREATE ROLE \nreadonly\n WITH LOGIN PASSWORD \nreadonly\n;\n\n\n\n\n\n\nPor \u00faltimo, crearemos el esquema que contendr\u00e1 nuestros datos espaciales:\n\n\nCREATE SCHEMA spatial AUTHORIZATION admin\n;\n\n\n\n\n\n\nPara salir de la conexi\u00f3n a la base de datos basta con escribir \n\\q\n.\n\n\nA partir de ahora se deber\u00eda poder conectar a la base de datos sin problemas desde QGIS o pgAdmin.", 
            "title": "Carga de datos en PostGIS"
        }, 
        {
            "location": "/postgis/#configuracion-inicial", 
            "text": "Una vez el servicio est\u00e1 funcionando, crearemos una nueva base de datos:  sudo -u postgres createdb nfms  y conectaremos a ella:  sudo -u postgres psql -d nfms  Estando conectados deberemos activar PostGIS en nuestra base de datos:  CREATE EXTENSION postgis ;   y crear dos usuarios, uno para administraci\u00f3n y otro s\u00f3lo para lectura ( \u00a1es importante cambiar las contrase\u00f1as por otras m\u00e1s seguras! ):  CREATE ROLE admin WITH LOGIN CREATEROLE PASSWORD  admin ; \nCREATE ROLE  readonly  WITH LOGIN PASSWORD  readonly ;   Por \u00faltimo, crearemos el esquema que contendr\u00e1 nuestros datos espaciales:  CREATE SCHEMA spatial AUTHORIZATION admin ;   Para salir de la conexi\u00f3n a la base de datos basta con escribir  \\q .  A partir de ahora se deber\u00eda poder conectar a la base de datos sin problemas desde QGIS o pgAdmin.", 
            "title": "Configuraci\u00f3n inicial"
        }, 
        {
            "location": "/geoserver/", 
            "text": "Fecha\n\n\nAutores\n\n\n\n\n\n\n\n\n\n\n9  Enero 2018\n\n\nV\u00edctor Gonz\u00e1lez (\n)\n\n\n\n\n\n\n15 Enero 2018\n\n\nMicho Garc\u00eda (\n)\n\n\n\n\n\n\n\n\n\u00a92013 FAO Forestry\n\n\nExcepto donde quede reflejado de otra manera, la presente documentaci\u00f3n se halla bajo licencia \nCreative Commons\n.\n\n\n\n\nExiste en la red cantidad de informaci\u00f3n sobre el proceso de publicaci\u00f3n de datos en GeoServer. Enlazamos desde aqu\u00ed a la informaci\u00f3n de GeoTalleres donde encontrar\u00e1 documentaci\u00f3n amplia informaci\u00f3n sobre este servidor de mapas.\n\n\n\n\nInstalaci\u00f3n de GeoServer (con PostGIS)\n\n\nIntroducci\u00f3n a GeoServer\n\n\nGeoServer: Publicaci\u00f3n de datos vectoriales\n\n\nGeoServer: Publicaci\u00f3n de datos raster\n\n\nGeoServer: Creaci\u00f3n de una pir\u00e1mide raster con transparencia\n\n\nGeoServer en producci\u00f3n\n\n\nCopias de seguridad de GeoServer\n\n\nPregeneraci\u00f3n de teselas en GeoWebCache\n\n\nOptimizaci\u00f3n de GeoTIFF para su publicaci\u00f3n\n\n\n\n\nA continuaci\u00f3n se exponen algunas soluciones para problemas particulares encontrados en el proceso de publicaci\u00f3n de datos de algunos paises.\n\n\nResolviendo el problema de las etiquetas\n\n\nDescripci\u00f3n del problema\n\n\nTenemos una capa de provincias, de la que disponemos de las geometr\u00edas del pol\u00edgono y de un campo con el nombre de la provincia. Se quiere publicar en un servidor de mapas, de manera que se muestre el pol\u00edgono de la provincia y en un punto interior el nombre de la misma. \n\n\nPara ello, mediante el uso de GeoServer, publicamos la capa y le aplicamos el siguiente estilo::\n\n\n    \n?xml version=\n1.0\n encoding=\nUTF-8\n?\n\n    \nStyledLayerDescriptor\n \nversion=\n1.0.0\n \nxmlns=\nhttp://www.opengis.net/sld\n \nxmlns:ogc=\nhttp://www.opengis.net/ogc\n\n  \nxmlns:xlink=\nhttp://www.w3.org/1999/xlink\n \nxmlns:xsi=\nhttp://www.w3.org/2001/XMLSchema-instance\n\n  \nxsi:schemaLocation=\nhttp://www.opengis.net/sld http://schemas.opengis.net/sld/1.0.0/StyledLayerDescriptor.xsd\n\n  \n!--  simbologia_adm_prov_4326 --\n\n  \n!-- http://geo2.ambiente.gob.ar/geoserver/bosques_umsef_db/wms?service=WMS\nversion=1.1.0\nrequest=GetMap\nlayers=bosques_umsef_db:limites_provinciales\nstyles=\nbbox=-73.566302817,-52.394802778,-53.637962552,-21.777951173\nwidth=333\nheight=512\nsrs=EPSG:4326\nformat=application/openlayers\nTIME=1999 --\n\n\n  \nNamedLayer\n\n    \nName\nBlue lake\n/Name\n\n    \nUserStyle\n\n      \nTitle\nBlue lake\n/Title\n\n      \nAbstract\nA blue fill, solid black outline style\n/Abstract\n\n      \nFeatureTypeStyle\n\n    \nRule\n\n      \nName\nname\n/Name\n\n      \nPolygonSymbolizer\n\n        \nFill\n\n          \nCssParameter\n \nname=\nfill\n\n            \nogc:Literal\n#ffffff\n/ogc:Literal\n\n          \n/CssParameter\n\n          \nCssParameter\n \nname=\nfill\n\n            \nogc:Literal\n1.0\n/ogc:Literal\n\n          \n/CssParameter\n\n        \n/Fill\n\n      \n/PolygonSymbolizer\n\n           \nLineSymbolizer\n\n        \nStroke\n\n          \nCssParameter\n \nname=\nstroke\n#000000\n/CssParameter\n\n            \nCssParameter\n \nname=\nstroke-width\n1\n/CssParameter\n\n        \n/Stroke\n\n           \n/LineSymbolizer\n\n      \nTextSymbolizer\n\n       \nGeometry\n\n     \nogc:Function\n \nname=\ninteriorPoint\n\n       \nogc:PropertyName\nthe_geom\n/ogc:PropertyName\n\n     \n/ogc:Function\n\n       \n/Geometry\n\n           \nLabel\n\n              \nogc:PropertyName\nNAME_1\n/ogc:PropertyName\n\n            \n/Label\n\n            \nLabelPlacement\n\n              \nPointPlacement\n\n                \nAnchorPoint\n\n                  \nAnchorPointX\n0.5\n/AnchorPointX\n\n                  \nAnchorPointY\n0.5\n/AnchorPointY\n\n                \n/AnchorPoint\n\n              \n/PointPlacement\n\n            \n/LabelPlacement\n\n            \nHalo\n\n              \nRadius\n\n                \nogc:Literal\n2\n/ogc:Literal\n\n              \n/Radius\n\n              \nFill\n\n                \nCssParameter\n \nname=\nfill\n#FFFFFF\n/CssParameter\n\n              \n/Fill\n\n            \n/Halo\n\n            \nFill\n\n              \nCssParameter\n \nname=\nfill\n#000000\n/CssParameter\n\n            \n/Fill\n\n            \nVendorOption\n \nname=\ngoodnessOfFit\n0\n/VendorOption\n\n            \nVendorOption\n \nname=\nconflictResolution\nfalse\n/VendorOption\n\n          \n/TextSymbolizer\n\n              \n/Rule\n\n      \n/FeatureTypeStyle\n\n    \n/UserStyle\n\n      \n/NamedLayer\n\n    \n/StyledLayerDescriptor\n\n\n\n\n\n\nDe esta manera, publicada la capa, podremos observar a trav\u00e9s de la previsualizaci\u00f3n de capas, que el aspecto de la capa es el siguiente:\n\n\n\n   http://demo.geomati.co/geoserver/unredd-test/wms?service=WMS\nversion=1.1.0\nrequest=GetMap\nlayers=unredd-test:provincias_inicial\nstyles=\nbbox=-73.5777809999999,-55.06152999999995,-53.59183499999989,-21.778547999999944\nwidth=461\nheight=768\nsrs=EPSG:4326\nformat=application/openlayers\n\n\nEn este momento la capa se est\u00e1 sirviendo como una sola imagen. Esto lo podremos comprobar en la pesta\u00f1a de \nRed\n de las herramientas de desarrollo de nuestro navegador (Google Chrome en este caso):\n\n\n.. image:: _static/metatiles/unique_petition.png\n\n\nPara conseguir una mejor experiencia de usuario, se usa las peticiones teseladas, que consiste en particionar la imagen total en varias de menor tama\u00f1o, tiles (teselas), y de esta manera la descarga de la imagen se realiza en multiples imagenes que unidas componen la imagen total. En nuestro caso, para definir el uso de las teselas, podremos, desde el previsualizador de capas, en los par\u00e1metros adicionales:\n\n\n.\n\n\nDesde la barra de par\u00e1metros opcionales, podremos definir que nos devuelva la imagen teselada, para ello en la opci\u00f3n \nTilling\n, seleccionamos \nTiled\n. Podremos comprobar en la pesta\u00f1a de \nRed\n de nuestras herramientas de desarrollo que ahora en vez de realizar una \u00fanica petici\u00f3n, realiza varias, una por cada tesela, para componer la imagen total:\n\n\n\n\nLa diferencia es que en este \u00faltimo caso, cada petici\u00f3n realizada por el cliente, se trata de una parte de la imagen global:\n\n\n\n\nEl problema que aparece es que en algunas provincias, desaparecen las etiquetas con los nombres. Seg\u00fan variemos el zoom, podremos observar que estas etiquetas van apareciendo y desapareciendo de manera aleatoria.\n\n\n\n\nEsto es debido al proceso de creaci\u00f3n de las teselas. Lo que sucede es que en el momento de definir la tesela, el servidor comprueba que la etiqueta est\u00e9 completamente incluida en la tesela, y en caso contrario, delega la creaci\u00f3n de la etiqueta en otra tesela, pero, si como en este caso, la etiqueta no vuelve a encajar dentro de otra tesela, esta etiqueta no ser\u00e1 dibujada. Como se observa en la siguente figura, para la provincia por encima de Rio Negro y debajo de Mendoza, que aparece sin etiqueta, se puede ver como el l\u00edmite de la tesela, coincide justo con la posici\u00f3n donde estar\u00eda la etiqueta.\n\n\n\n\nSoluci\u00f3n 1: Metatileado\n\n\nLas metatiles son tiles creadas de la combinaci\u00f3n de varias tiles. Su beneficio es que el servidor de mapas genera el contenido de las tiles a partir de una metatile creada anteriormente y que despu\u00e9s se partir\u00e1 en el n\u00famero de tiles necesario.\n\n\n\n\nEn la imagen anterior podemos observar una metatile 3x3, que est\u00e1 compuesta por 9 tiles. \nAdem\u00e1s de la composici\u00f3n en N tiles, las metatiles disponen de una parte que es el buffer, que ser\u00e1 tenida en cuenta a la hora de generar la metatile, pero que no se mostrar\u00e1 en las teselas resultantes de la metatile. \n\n\n\n\nEl objetivo de este buffer es permitir que las etiquetas, marcadores, etc, que se encuentran en los l\u00edmites de la metatile, se dibujen correctamente ya que estos elementos ser\u00e1n tenidos en cuenta en la generaci\u00f3n de las teselas de esa metatile.\n\n\nImplementaci\u00f3n del metatileado en GeoServer\n\n\nGeoWebCache, integrado en GeoServer es el que aporta la soluci\u00f3n del metatileado a este servidor de mapas. Para aplicar este:\n\n\nvamos a la pesta\u00f1a \nTile Caching\n de nuestra capa publicada en GeoServer\n\n\n\n\nen las opciones de \nTile cache configuration\n selecciones los siguientes valores:\n\n\n\n\nSeleccionamos \nCreate a cached layer for this layer\n\n\nSeleccionamos \nEnable tile caching for this layer\n\n\nEn \nMetatiling Factors\n seleccionamos valores 4 \ntiles wide\n por 4 \ntiles high\n\n\nSeleccionamos un tama\u00f1o de Gutter (buffer) de 100 pixels\n\n\n\n\n\n\nDe esta manera, se generar\u00e1 una metatile de 4x4, con un buffer de 100px.\n\n\nAhora podremos consumir desde nuestro cliente la capa que se est\u00e1 \nsirviendo a trav\u00e9s de GeoWebCache\n_, bien usando la URL asociada a esta capa:\n\n\n\n\nhttp://example.com/geoserver/gwc/service/wms\n\n\n\n\no mediante el uso de las peticiones GetMap del WMS siempre que GeoServer se encuentre correctamente configurado. \n\n\n\n\nRevisar documentaci\u00f3n del uso de GeoWebCache dentro de GeoServer que se adjunta en la referencia de este cap\u00edtulo\n\n\n\n\nSoluci\u00f3n 2: Creaci\u00f3n de una capa de puntos\n\n\nOtra soluci\u00f3n al problema de las etiquetas de las capas es la separaci\u00f3n de los elementos en varias capas y su posterior consumo. Para ello lo que se realiz\u00f3 es lo siguiente. \n\n\nA partir de la capa de pol\u00edgonos se obtiene una capa con los puntos interiores mediante el uso, por ejemplo, de un SIG de Escritorio como QGIS o mediante el uso de cualquier otra herramienta SIG como PostGIS, OGR, etc. El producto final del procesamiento ser\u00e1 una capa de puntos.\n\n\n\nhttp://demo.geomati.co/geoserver/unredd-test/wms?service=WMS\nversion=1.1.0\nrequest=GetMap\nlayers=unredd-test:centroides_sin_estilo\nstyles=\nbbox=-70.11797893048644,-54.33202129909892,-54.64727704784167,-23.317464204714994\nwidth=383\nheight=768\nsrs=EPSG:4326\nformat=application/openlayers\n\n\nAhora deberemos dividir el SLD con el estilo original en dos partes y aplicaremos estos estilos a cada una de las capas. Por un lado mostraremos los contornos de las provincias sobre la capa de provincias original:\n\n\n    \n?xml version=\n1.0\n encoding=\nUTF-8\n?\n\n    \nStyledLayerDescriptor\n \nversion=\n1.0.0\n \nxmlns=\nhttp://www.opengis.net/sld\n \nxmlns:ogc=\nhttp://www.opengis.net/ogc\n\n      \nxmlns:xlink=\nhttp://www.w3.org/1999/xlink\n \nxmlns:xsi=\nhttp://www.w3.org/2001/XMLSchema-instance\n\n      \nxsi:schemaLocation=\nhttp://www.opengis.net/sld http://schemas.opengis.net/sld/1.0.0/StyledLayerDescriptor.xsd\n\n\n      \nNamedLayer\n\n    \nName\nBlue lake\n/Name\n\n    \nUserStyle\n\n      \nTitle\nBlue lake\n/Title\n\n      \nAbstract\nA blue fill, solid black outline style\n/Abstract\n\n      \nFeatureTypeStyle\n\n        \nRule\n\n          \nName\nname\n/Name\n\n          \nPolygonSymbolizer\n\n            \nFill\n\n              \nCssParameter\n \nname=\nfill\n\n                \nogc:Literal\n#ffffff\n/ogc:Literal\n\n              \n/CssParameter\n\n              \nCssParameter\n \nname=\nfill\n\n                \nogc:Literal\n1.0\n/ogc:Literal\n\n              \n/CssParameter\n\n            \n/Fill\n\n          \n/PolygonSymbolizer\n\n          \nLineSymbolizer\n\n            \nStroke\n\n                \nCssParameter\n \nname=\nstroke\n#000000\n/CssParameter\n\n                \nCssParameter\n \nname=\nstroke-width\n1\n/CssParameter\n\n            \n/Stroke\n\n          \n/LineSymbolizer\n\n        \n/Rule\n\n      \n/FeatureTypeStyle\n\n    \n/UserStyle\n\n      \n/NamedLayer\n\n    \n/StyledLayerDescriptor\n\n\n\n\n\n\nlo que dar\u00e1 como resultado:\n\n\n\nhttp://demo.geomati.co/geoserver/unredd-test/wms?service=WMS\nversion=1.1.0\nrequest=GetMap\nlayers=unredd-test:provincias\nstyles=\nbbox=-73.5777809999999,-55.06152999999995,-53.59183499999989,-21.778547999999944\nwidth=461\nheight=768\nsrs=EPSG:4326\nformat=application/openlayers\n\n\ny por otro lado usaremos el estilo de las etiquetas con la capa de puntos que acabamos de generar:\n\n\n    \n?xml version=\n1.0\n encoding=\nUTF-8\n?\n\n    \nStyledLayerDescriptor\n \nversion=\n1.0.0\n \nxmlns=\nhttp://www.opengis.net/sld\n \nxmlns:ogc=\nhttp://www.opengis.net/ogc\n\n      \nxmlns:xlink=\nhttp://www.w3.org/1999/xlink\n \nxmlns:xsi=\nhttp://www.w3.org/2001/XMLSchema-instance\n\n      \nxsi:schemaLocation=\nhttp://www.opengis.net/sld http://schemas.opengis.net/sld/1.0.0/StyledLayerDescriptor.xsd\n\n\n      \nNamedLayer\n\n    \nName\nBlue lake\n/Name\n\n    \nUserStyle\n\n      \nTitle\nBlue lake\n/Title\n\n      \nAbstract\nA blue fill, solid black outline style\n/Abstract\n\n      \nFeatureTypeStyle\n\n        \nRule\n\n          \nName\nname\n/Name\n\n          \nTextSymbolizer\n\n           \nLabel\n\n              \nogc:PropertyName\nNAME_1\n/ogc:PropertyName\n\n            \n/Label\n\n            \nLabelPlacement\n\n              \nPointPlacement\n\n                \nAnchorPoint\n\n                  \nAnchorPointX\n0.5\n/AnchorPointX\n\n                  \nAnchorPointY\n0.5\n/AnchorPointY\n\n                \n/AnchorPoint\n\n              \n/PointPlacement\n\n            \n/LabelPlacement\n\n            \nHalo\n\n              \nRadius\n\n                \nogc:Literal\n2\n/ogc:Literal\n\n              \n/Radius\n\n              \nFill\n\n                \nCssParameter\n \nname=\nfill\n#FFFFFF\n/CssParameter\n\n              \n/Fill\n\n            \n/Halo\n\n            \nFill\n\n              \nCssParameter\n \nname=\nfill\n#000000\n/CssParameter\n\n            \n/Fill\n\n            \nVendorOption\n \nname=\ngoodnessOfFit\n0\n/VendorOption\n\n            \nVendorOption\n \nname=\nconflictResolution\nfalse\n/VendorOption\n\n          \n/TextSymbolizer\n\n              \n/Rule\n\n      \n/FeatureTypeStyle\n\n    \n/UserStyle\n\n      \n/NamedLayer\n\n    \n/StyledLayerDescriptor\n\n\n\n\n\n\nlo que mostrar\u00e1 la capa de la siguiente manera:\n\n\n\nhttp://demo.geomati.co/geoserver/unredd-test/wms?service=WMS\nversion=1.1.0\nrequest=GetMap\nlayers=unredd-test:centroides\nstyles=\nbbox=-70.11797893048644,-54.33202129909892,-54.64727704784167,-23.317464204714994\nwidth=383\nheight=768\nsrs=EPSG:4326\nformat=application/openlayers\n\n\nAhora deberemos pinchar ambas capas por separado en nuestro visor, aplicando el teselado en la de provincias y mostrando sin teselar la de las etiquetas.\n\n\nReferencias\n\n\nMetatiles\n \nEN\n\n\nUnderstanding Metatiles\n \nEN\n\n\nMapProxy WMS Labeling\n  \nEN\n\n\nUsing GeoWebCache\n  \nEN", 
            "title": "Publicaci\u00f3n de datos en GeoServer"
        }, 
        {
            "location": "/geoserver/#resolviendo-el-problema-de-las-etiquetas", 
            "text": "", 
            "title": "Resolviendo el problema de las etiquetas"
        }, 
        {
            "location": "/geoserver/#descripcion-del-problema", 
            "text": "Tenemos una capa de provincias, de la que disponemos de las geometr\u00edas del pol\u00edgono y de un campo con el nombre de la provincia. Se quiere publicar en un servidor de mapas, de manera que se muestre el pol\u00edgono de la provincia y en un punto interior el nombre de la misma.   Para ello, mediante el uso de GeoServer, publicamos la capa y le aplicamos el siguiente estilo::       ?xml version= 1.0  encoding= UTF-8 ? \n     StyledLayerDescriptor   version= 1.0.0   xmlns= http://www.opengis.net/sld   xmlns:ogc= http://www.opengis.net/ogc \n   xmlns:xlink= http://www.w3.org/1999/xlink   xmlns:xsi= http://www.w3.org/2001/XMLSchema-instance \n   xsi:schemaLocation= http://www.opengis.net/sld http://schemas.opengis.net/sld/1.0.0/StyledLayerDescriptor.xsd \n   !--  simbologia_adm_prov_4326 -- \n   !-- http://geo2.ambiente.gob.ar/geoserver/bosques_umsef_db/wms?service=WMS version=1.1.0 request=GetMap layers=bosques_umsef_db:limites_provinciales styles= bbox=-73.566302817,-52.394802778,-53.637962552,-21.777951173 width=333 height=512 srs=EPSG:4326 format=application/openlayers TIME=1999 -- \n\n   NamedLayer \n     Name Blue lake /Name \n     UserStyle \n       Title Blue lake /Title \n       Abstract A blue fill, solid black outline style /Abstract \n       FeatureTypeStyle \n     Rule \n       Name name /Name \n       PolygonSymbolizer \n         Fill \n           CssParameter   name= fill \n             ogc:Literal #ffffff /ogc:Literal \n           /CssParameter \n           CssParameter   name= fill \n             ogc:Literal 1.0 /ogc:Literal \n           /CssParameter \n         /Fill \n       /PolygonSymbolizer \n            LineSymbolizer \n         Stroke \n           CssParameter   name= stroke #000000 /CssParameter \n             CssParameter   name= stroke-width 1 /CssParameter \n         /Stroke \n            /LineSymbolizer \n       TextSymbolizer \n        Geometry \n      ogc:Function   name= interiorPoint \n        ogc:PropertyName the_geom /ogc:PropertyName \n      /ogc:Function \n        /Geometry \n            Label \n               ogc:PropertyName NAME_1 /ogc:PropertyName \n             /Label \n             LabelPlacement \n               PointPlacement \n                 AnchorPoint \n                   AnchorPointX 0.5 /AnchorPointX \n                   AnchorPointY 0.5 /AnchorPointY \n                 /AnchorPoint \n               /PointPlacement \n             /LabelPlacement \n             Halo \n               Radius \n                 ogc:Literal 2 /ogc:Literal \n               /Radius \n               Fill \n                 CssParameter   name= fill #FFFFFF /CssParameter \n               /Fill \n             /Halo \n             Fill \n               CssParameter   name= fill #000000 /CssParameter \n             /Fill \n             VendorOption   name= goodnessOfFit 0 /VendorOption \n             VendorOption   name= conflictResolution false /VendorOption \n           /TextSymbolizer \n               /Rule \n       /FeatureTypeStyle \n     /UserStyle \n       /NamedLayer \n     /StyledLayerDescriptor   De esta manera, publicada la capa, podremos observar a trav\u00e9s de la previsualizaci\u00f3n de capas, que el aspecto de la capa es el siguiente:  \n   http://demo.geomati.co/geoserver/unredd-test/wms?service=WMS version=1.1.0 request=GetMap layers=unredd-test:provincias_inicial styles= bbox=-73.5777809999999,-55.06152999999995,-53.59183499999989,-21.778547999999944 width=461 height=768 srs=EPSG:4326 format=application/openlayers  En este momento la capa se est\u00e1 sirviendo como una sola imagen. Esto lo podremos comprobar en la pesta\u00f1a de  Red  de las herramientas de desarrollo de nuestro navegador (Google Chrome en este caso):  .. image:: _static/metatiles/unique_petition.png  Para conseguir una mejor experiencia de usuario, se usa las peticiones teseladas, que consiste en particionar la imagen total en varias de menor tama\u00f1o, tiles (teselas), y de esta manera la descarga de la imagen se realiza en multiples imagenes que unidas componen la imagen total. En nuestro caso, para definir el uso de las teselas, podremos, desde el previsualizador de capas, en los par\u00e1metros adicionales:  .  Desde la barra de par\u00e1metros opcionales, podremos definir que nos devuelva la imagen teselada, para ello en la opci\u00f3n  Tilling , seleccionamos  Tiled . Podremos comprobar en la pesta\u00f1a de  Red  de nuestras herramientas de desarrollo que ahora en vez de realizar una \u00fanica petici\u00f3n, realiza varias, una por cada tesela, para componer la imagen total:   La diferencia es que en este \u00faltimo caso, cada petici\u00f3n realizada por el cliente, se trata de una parte de la imagen global:   El problema que aparece es que en algunas provincias, desaparecen las etiquetas con los nombres. Seg\u00fan variemos el zoom, podremos observar que estas etiquetas van apareciendo y desapareciendo de manera aleatoria.   Esto es debido al proceso de creaci\u00f3n de las teselas. Lo que sucede es que en el momento de definir la tesela, el servidor comprueba que la etiqueta est\u00e9 completamente incluida en la tesela, y en caso contrario, delega la creaci\u00f3n de la etiqueta en otra tesela, pero, si como en este caso, la etiqueta no vuelve a encajar dentro de otra tesela, esta etiqueta no ser\u00e1 dibujada. Como se observa en la siguente figura, para la provincia por encima de Rio Negro y debajo de Mendoza, que aparece sin etiqueta, se puede ver como el l\u00edmite de la tesela, coincide justo con la posici\u00f3n donde estar\u00eda la etiqueta.", 
            "title": "Descripci\u00f3n del problema"
        }, 
        {
            "location": "/geoserver/#solucion-1-metatileado", 
            "text": "Las metatiles son tiles creadas de la combinaci\u00f3n de varias tiles. Su beneficio es que el servidor de mapas genera el contenido de las tiles a partir de una metatile creada anteriormente y que despu\u00e9s se partir\u00e1 en el n\u00famero de tiles necesario.   En la imagen anterior podemos observar una metatile 3x3, que est\u00e1 compuesta por 9 tiles. \nAdem\u00e1s de la composici\u00f3n en N tiles, las metatiles disponen de una parte que es el buffer, que ser\u00e1 tenida en cuenta a la hora de generar la metatile, pero que no se mostrar\u00e1 en las teselas resultantes de la metatile.    El objetivo de este buffer es permitir que las etiquetas, marcadores, etc, que se encuentran en los l\u00edmites de la metatile, se dibujen correctamente ya que estos elementos ser\u00e1n tenidos en cuenta en la generaci\u00f3n de las teselas de esa metatile.", 
            "title": "Soluci\u00f3n 1: Metatileado"
        }, 
        {
            "location": "/geoserver/#implementacion-del-metatileado-en-geoserver", 
            "text": "GeoWebCache, integrado en GeoServer es el que aporta la soluci\u00f3n del metatileado a este servidor de mapas. Para aplicar este:  vamos a la pesta\u00f1a  Tile Caching  de nuestra capa publicada en GeoServer   en las opciones de  Tile cache configuration  selecciones los siguientes valores:   Seleccionamos  Create a cached layer for this layer  Seleccionamos  Enable tile caching for this layer  En  Metatiling Factors  seleccionamos valores 4  tiles wide  por 4  tiles high  Seleccionamos un tama\u00f1o de Gutter (buffer) de 100 pixels    De esta manera, se generar\u00e1 una metatile de 4x4, con un buffer de 100px.  Ahora podremos consumir desde nuestro cliente la capa que se est\u00e1  sirviendo a trav\u00e9s de GeoWebCache _, bien usando la URL asociada a esta capa:   http://example.com/geoserver/gwc/service/wms   o mediante el uso de las peticiones GetMap del WMS siempre que GeoServer se encuentre correctamente configurado.    Revisar documentaci\u00f3n del uso de GeoWebCache dentro de GeoServer que se adjunta en la referencia de este cap\u00edtulo", 
            "title": "Implementaci\u00f3n del metatileado en GeoServer"
        }, 
        {
            "location": "/geoserver/#solucion-2-creacion-de-una-capa-de-puntos", 
            "text": "Otra soluci\u00f3n al problema de las etiquetas de las capas es la separaci\u00f3n de los elementos en varias capas y su posterior consumo. Para ello lo que se realiz\u00f3 es lo siguiente.   A partir de la capa de pol\u00edgonos se obtiene una capa con los puntos interiores mediante el uso, por ejemplo, de un SIG de Escritorio como QGIS o mediante el uso de cualquier otra herramienta SIG como PostGIS, OGR, etc. El producto final del procesamiento ser\u00e1 una capa de puntos.  \nhttp://demo.geomati.co/geoserver/unredd-test/wms?service=WMS version=1.1.0 request=GetMap layers=unredd-test:centroides_sin_estilo styles= bbox=-70.11797893048644,-54.33202129909892,-54.64727704784167,-23.317464204714994 width=383 height=768 srs=EPSG:4326 format=application/openlayers  Ahora deberemos dividir el SLD con el estilo original en dos partes y aplicaremos estos estilos a cada una de las capas. Por un lado mostraremos los contornos de las provincias sobre la capa de provincias original:       ?xml version= 1.0  encoding= UTF-8 ? \n     StyledLayerDescriptor   version= 1.0.0   xmlns= http://www.opengis.net/sld   xmlns:ogc= http://www.opengis.net/ogc \n       xmlns:xlink= http://www.w3.org/1999/xlink   xmlns:xsi= http://www.w3.org/2001/XMLSchema-instance \n       xsi:schemaLocation= http://www.opengis.net/sld http://schemas.opengis.net/sld/1.0.0/StyledLayerDescriptor.xsd \n\n       NamedLayer \n     Name Blue lake /Name \n     UserStyle \n       Title Blue lake /Title \n       Abstract A blue fill, solid black outline style /Abstract \n       FeatureTypeStyle \n         Rule \n           Name name /Name \n           PolygonSymbolizer \n             Fill \n               CssParameter   name= fill \n                 ogc:Literal #ffffff /ogc:Literal \n               /CssParameter \n               CssParameter   name= fill \n                 ogc:Literal 1.0 /ogc:Literal \n               /CssParameter \n             /Fill \n           /PolygonSymbolizer \n           LineSymbolizer \n             Stroke \n                 CssParameter   name= stroke #000000 /CssParameter \n                 CssParameter   name= stroke-width 1 /CssParameter \n             /Stroke \n           /LineSymbolizer \n         /Rule \n       /FeatureTypeStyle \n     /UserStyle \n       /NamedLayer \n     /StyledLayerDescriptor   lo que dar\u00e1 como resultado:  \nhttp://demo.geomati.co/geoserver/unredd-test/wms?service=WMS version=1.1.0 request=GetMap layers=unredd-test:provincias styles= bbox=-73.5777809999999,-55.06152999999995,-53.59183499999989,-21.778547999999944 width=461 height=768 srs=EPSG:4326 format=application/openlayers  y por otro lado usaremos el estilo de las etiquetas con la capa de puntos que acabamos de generar:       ?xml version= 1.0  encoding= UTF-8 ? \n     StyledLayerDescriptor   version= 1.0.0   xmlns= http://www.opengis.net/sld   xmlns:ogc= http://www.opengis.net/ogc \n       xmlns:xlink= http://www.w3.org/1999/xlink   xmlns:xsi= http://www.w3.org/2001/XMLSchema-instance \n       xsi:schemaLocation= http://www.opengis.net/sld http://schemas.opengis.net/sld/1.0.0/StyledLayerDescriptor.xsd \n\n       NamedLayer \n     Name Blue lake /Name \n     UserStyle \n       Title Blue lake /Title \n       Abstract A blue fill, solid black outline style /Abstract \n       FeatureTypeStyle \n         Rule \n           Name name /Name \n           TextSymbolizer \n            Label \n               ogc:PropertyName NAME_1 /ogc:PropertyName \n             /Label \n             LabelPlacement \n               PointPlacement \n                 AnchorPoint \n                   AnchorPointX 0.5 /AnchorPointX \n                   AnchorPointY 0.5 /AnchorPointY \n                 /AnchorPoint \n               /PointPlacement \n             /LabelPlacement \n             Halo \n               Radius \n                 ogc:Literal 2 /ogc:Literal \n               /Radius \n               Fill \n                 CssParameter   name= fill #FFFFFF /CssParameter \n               /Fill \n             /Halo \n             Fill \n               CssParameter   name= fill #000000 /CssParameter \n             /Fill \n             VendorOption   name= goodnessOfFit 0 /VendorOption \n             VendorOption   name= conflictResolution false /VendorOption \n           /TextSymbolizer \n               /Rule \n       /FeatureTypeStyle \n     /UserStyle \n       /NamedLayer \n     /StyledLayerDescriptor   lo que mostrar\u00e1 la capa de la siguiente manera:  \nhttp://demo.geomati.co/geoserver/unredd-test/wms?service=WMS version=1.1.0 request=GetMap layers=unredd-test:centroides styles= bbox=-70.11797893048644,-54.33202129909892,-54.64727704784167,-23.317464204714994 width=383 height=768 srs=EPSG:4326 format=application/openlayers  Ahora deberemos pinchar ambas capas por separado en nuestro visor, aplicando el teselado en la de provincias y mostrando sin teselar la de las etiquetas.", 
            "title": "Soluci\u00f3n 2: Creaci\u00f3n de una capa de puntos"
        }, 
        {
            "location": "/geoserver/#referencias", 
            "text": "Metatiles   EN  Understanding Metatiles   EN  MapProxy WMS Labeling    EN  Using GeoWebCache    EN", 
            "title": "Referencias"
        }, 
        {
            "location": "/config/portal/", 
            "text": "Fecha\n\n\nAutores\n\n\n\n\n\n\n\n\n\n\n1 Noviembre 2012\n\n\nStefano Giaccio (Stefano.Giaccio@fao.org)\n\n\n\n\n\n\n1 Diciembre 2012\n\n\nOscar Fonts (oscar.fonts@geomati.co)\n\n\n\n\n\n\n24 Junio 2013\n\n\nFernando Gonz\u00e1lez (fernando.gonzalez@fao.org)\n\n\n\n\n\n\n15 Enero 2018\n\n\nMicho Garc\u00eda (micho.garcia@geomati.co)\n\n\n\n\n\n\n\n\n\u00a92013 FAO Forestry\n\n\nExcepto donde quede reflejado de otra manera, la presente documentaci\u00f3n se halla bajo licencia : \nCreative Commons\n\n\n\n\nPara configurar el portal y adaptarlo a cada pais se tendr\u00e1n que realizar cierta modificaciones en la estructura de la aplicaci\u00f3n instalada. El proceso de configuraci\u00f3n se podr\u00e1 seguir a partir de la \ndocumentaci\u00f3n de la plataforma\n\n\nA continuaci\u00f3n se presenta una peque\u00f1a guia de aprendizaje para la configuraci\u00f3n de nuevas capas.\n\n\nConfiguraci\u00f3n de una nueva capa\n\n\nLa definici\u00f3n de las capas a mostrar en el Portal se encuentra en el fichero \nlayers.json\n.\n\n\nEste contiene la informaci\u00f3n para asociar los elementos de la interfaz de usuario (panel con la lista de capas en la parte izquierda de la p\u00e1gina) con las capas WMS publicadas en GeoServer, personalizar las leyendas, y definir cu\u00e1les de las capas son interrogables. Tambi\u00e9n clasifica las capas por grupos.\n\n\nEl formato utilizado para este fichero de configuraci\u00f3n es JSON (JavaScript Object Notation), que es un formato para la representaci\u00f3n de datos. Est\u00e1 fuera del objetivo de esta gu\u00eda el aprendizaje de JSON, pero se exponen a continuaci\u00f3n algunas nociones b\u00e1sicas:\n\n\n\n\n\n\nLos valores en JSON pueden ser: n\u00fameros, cadenas de car\u00e1cteres, booleanos, arrays, objetos y el valor nulo. Por ejemplo: 13, \"hola mundo\", true, [12, 5, 2], {\"id\":3}.\n\n\n\n\n\n\nLos objetos est\u00e1n delimitados por llaves (\n{}\n) y contienen una serie de pares atributo-valor separados por comas. Los pares atributo/valor consisten en un nombre de propiedad entrecomillado, dos puntos y el valor. Por ejemplo podemos tener el siguiente elemento:\n\n\n{\n    \nid\n:12,\n    \nnombre\n:\npaco\n,\n    \nedad\n:55\n}\n\n\n\n\n\n\n\n\n\no incluso un elemento dentro de otro:\n\n\n{\n    \nempresa\n:\nzapatos smith\n,\n    \npropietario\n:{\n        \nid\n:12,\n        \nnombre\n:\njohn smith\n,\n        \nedad\n:55\n    },\n    \npais\n:\nArgentina\n\n}\n\n\n\n\n\n\n\nLos arrays especifican sus valores entre corchetes ([]) y separados por comas.\n[1, 2, 3, 4, 5]\n\n\n\n[\n\n    \n{\n\n        \nid\n:12,\n\n        \nnombre\n:\njohn smith\n,\n\n        \nedad\n:34\n\n    \n},\n\n    \n{\n\n        \nid\n:12,\n\n        \nnombre\n:\nsarah smith\n,\n\n        \nedad\n:22\n\n    \n},\n\n    \n{\n\n        \nid\n:12,\n\n        \nnombre\n:\nClark Kent\n,\n\n        \nedad\n:43\n\n    \n}\n\n\n]\n\n\n\n\n\n\n\n\n\n\nAlgunos recursos JSON:\n\n\n\n\nIntroducci\u00f3n al formato JSON\n\n\nValidador de JSON\n\n\nValidador en l\u00ednea de comandos: \npython -mjson.tool \nfichero.json\n\n\n\n\nEl fichero \nlayers.json\n contiene tres secciones:\n\n\n\n\nwmsLayers\n\n\nportalLayers\n\n\ngroups\n\n\n\n\nEn este apartado vamos a realizar dos ejercicios:\n\n\n\n\n\n\nEn primer lugar, vamos a a\u00f1adir la capa de l\u00edmites administrativos al grupo existente de \"admin_areas\".\n\n\n\n\n\n\nEn segundo lugar, a\u00f1adiremos la capa \"roads\" en un nuevo grupo de capas.\n\n\n\n\n\n\nConexi\u00f3n WMS\n\n\nCada \"wmsLayer\" se corresponde con una de las capas publicadas en GeoServer, y describe la manera de conectarse al servidor para obtener los datos:\n\n\n      \nwmsLayers\n: [\n         {\n          \nid\n: \nlimites_administrativos\n,\n          \nbaseUrl\n: \nhttp://172.16.250.131/geoserver/gwc/service/wms\n,\n          \nwmsName\n: \ncapacitacion:limites_administrativos\n,\n          \nimageFormat\n: \nimage/png\n,\n          \nvisible\n: true\n        }\n      ],\n\n\n\n\n\n\n\n\n\nEs posible copiar y pegar un elemento existente y reemplazar :\n\n\n\n\n\n\nel nuevo \"id\" ser\u00e1 distinto a todos los otros, por ejemplo: \"limites_administrativos\".\n\n\n\n\nel nuevo \"wmsName\" ser\u00e1 \"capacitacion:limites_administrativos\" (el nombre de la capa publicada en GeoServer).\n\n\nla baseUrl debe apuntar al servidor geoserver donde hemos cargado la capa.\n\n\n\n\nCapas del portal\n\n\nCada \"portalLayer\" representa una capa en el \u00e1rbol de capas del portal y por tanto a\u00f1ade nuevos datos necesarios para mostrar la informaci\u00f3n en la interfaz gr\u00e1fica.\n\n\n          \nportalLayers\n: [\n            {\n              \nid\n: \nlimites_administrativos\n,\n              \nactive\n: true,\n              \nlabel\n: \n${\nlimites_administrativos\n}\n,\n              \ninfoFile\n: \nlimites_def.html\n,\n              \nlayers\n: [\ncountry\n],\n              \ninlineLegendUrl\n: \nhttp://172.16.250.131/geoserver/wms?REQUEST=GetLegendGraphic\nVERSION=1.0.0\nFORMAT=image/png\nWIDTH=20\nHEIGHT=20\nLAYER=unredd:country\nTRANSPARENT=true\n\n            }\n          ],\n\n\n\n\n\n\n\n\n\nA\u00f1adir un nuevo objeto en \"context\", de igual estructura y valores que \"country\", excepto los siguientes cambios:\n\n\n\n\n\n\nel nuevo \"id\" ser\u00e1 \"regions\".\n\n\n\n\ncomo \"label\" se utilizar\u00e1 \"${limites_administrativos}\". De nuevo, esta etiqueta de sintaxis ${...} ser\u00e1 sustituida por un texto en el idioma que\n    corresponda, seg\u00fan los contenidos de \"messages\". Es la etiqueta que se mostrar\u00e1 en la interfaz gr\u00e1fica.\n\n\nen \"infoFile\" pondremos \"administrative_boundaries_def.html\". Esto crear\u00e1 un enlace a un documento con informaci\u00f3n sobre\n    los datos (localizado en :file:\nstatic/loc/\nidioma\n/html/\n).\n\n\nen \"layers\" pondremos [\"limites_administrativos\"], haciendo referencia al nuevo \nlayer\n.\n\n\nen \"inlineLegendUrl\" estableceremos el par\u00e1metro LAYER as\u00ed \nLAYER=capacitacion:limites_administrativos\n. Esto generar\u00e1\n    una imagen con la leyenda.\n\n\n\n\nGrupos\n\n\nLos \"Groups\" son una estructura recursiva (multinivel) para agrupar visualmente las capas en el panel. El \"group\" de primer nivel construye cada uno de los grupos de capas en forma de persiana desplegable, conteniendo una lista de \"items\" que hacen referencia a los contextos definidos anteriormente.\n\n\ngroups\n : [\n    {\n        \nid\n : \nadmin\n,\n        \nlabel\n : \n${\nadmin_areas\n}\n,\n        \nitems\n : [ \ncountryBoundaries\n, \nprovinces\n ]\n    },\n    ...\n]\n\n\n\n\n\nN\u00f3tese que en la propiedad \"items\", se hace referencia a las \"portalLayers\" definidas anteriormente. Tambi\u00e9n, es posible dentro de dicha propiedad, a\u00f1adir varios subgrupos de manera que las capas contenidas en \u00e9stos se visualicen dentro de una misma pesta\u00f1a, pero agrupados visualmente bajo un t\u00edtulo.\n\n\ngroups\n : [\n    {\n        \nid\n : \nadmin\n,\n        \nlabel\n : \n${\nadmin_areas\n}\n,\n        \nitems\n : [\n            {\n                \nid\n : \nadmin1\n,\n                \nlabel\n : \nNacional\n,\n                \nitems\n: [\nlimite_nacional\n]\n            }, {\n                \nid\n : \nadmin2\n,\n                \nlabel\n : \nRegional\n,\n                \nitems\n: [ \nprovincias\n ]\n            }\n        ]\n    },\n    ...\n]\n\n\n\n\n\n\n\n\n\nA\u00f1adir un nuevo elemento \n{ \"context\": \"limites_administrativos\" }\n a continuaci\u00f3n de \n{ \"context\": \"country\" }\n. Esto incluir\u00e1 la capa en el grupo de \u00e1reas administrativas.\n\n\n\n\n\n\nFinalmente, utilizar un validador JSON, para comprobar que la sintaxis del nuevo \nlayers.json\n es correcta, y recargar la p\u00e1gina.\n\n\n\n\n\n\nConfiguraci\u00f3n de un nuevo grupo de capas\n\n\nRepetiremos el ejercicio anterior para a\u00f1adir la capa de ciudades, teniendo en cuenta que:\n\n\n\n\n\n\nPara el nuevo \"layer\", usaremos el id \"ciudades\" y la capa wms \"capacitacion:ciudades\". Adem\u00e1s, a\u00f1adiremos un nuevo atributo \n\"legend\": \"ciudades.png\"\n para mostrar la leyenda de la capa. Este atributo hace referencia a una imagen localizada en :file:\nstatic/loc/\nidioma\n/images/\n.\n\n\n\n\n\n\nEn el nuevo \"context\", ser\u00e1 m\u00e1s sencillo, s\u00f3lo contendr\u00e1 los tres elementos \n\"id\": \"roads\", \"label\": \"${ciudades}\", \"layers\": [\"ciudades\"]\n.\n\n\n\n\n\n\nEn \"contextGroups\", crearemos un nuevo grupo llamado \"otros\", con esta sintaxis:\n\n\n  {\n    \ngroup\n: {\n      \nlabel\n: \n${\nother\n}\n,\n      \nitems\n: [\n      { \ncontext\n: \nroads\n }\n      ]\n  }\n\n\n\n\n\n\n\n\n\nTras validar el JSON, y recargar la p\u00e1gina, obtendremos la capa de carreteras bajo el nuevo grupo \"Otros\".", 
            "title": "Configuraci\u00f3n del portal"
        }, 
        {
            "location": "/config/portal/#configuracion-de-una-nueva-capa", 
            "text": "La definici\u00f3n de las capas a mostrar en el Portal se encuentra en el fichero  layers.json .  Este contiene la informaci\u00f3n para asociar los elementos de la interfaz de usuario (panel con la lista de capas en la parte izquierda de la p\u00e1gina) con las capas WMS publicadas en GeoServer, personalizar las leyendas, y definir cu\u00e1les de las capas son interrogables. Tambi\u00e9n clasifica las capas por grupos.  El formato utilizado para este fichero de configuraci\u00f3n es JSON (JavaScript Object Notation), que es un formato para la representaci\u00f3n de datos. Est\u00e1 fuera del objetivo de esta gu\u00eda el aprendizaje de JSON, pero se exponen a continuaci\u00f3n algunas nociones b\u00e1sicas:    Los valores en JSON pueden ser: n\u00fameros, cadenas de car\u00e1cteres, booleanos, arrays, objetos y el valor nulo. Por ejemplo: 13, \"hola mundo\", true, [12, 5, 2], {\"id\":3}.    Los objetos est\u00e1n delimitados por llaves ( {} ) y contienen una serie de pares atributo-valor separados por comas. Los pares atributo/valor consisten en un nombre de propiedad entrecomillado, dos puntos y el valor. Por ejemplo podemos tener el siguiente elemento:  {\n     id :12,\n     nombre : paco ,\n     edad :55\n}    o incluso un elemento dentro de otro:  {\n     empresa : zapatos smith ,\n     propietario :{\n         id :12,\n         nombre : john smith ,\n         edad :55\n    },\n     pais : Argentina \n}   Los arrays especifican sus valores entre corchetes ([]) y separados por comas. [1, 2, 3, 4, 5]  [ \n     { \n         id :12, \n         nombre : john smith , \n         edad :34 \n     }, \n     { \n         id :12, \n         nombre : sarah smith , \n         edad :22 \n     }, \n     { \n         id :12, \n         nombre : Clark Kent , \n         edad :43 \n     }  ]     Algunos recursos JSON:   Introducci\u00f3n al formato JSON  Validador de JSON  Validador en l\u00ednea de comandos:  python -mjson.tool  fichero.json   El fichero  layers.json  contiene tres secciones:   wmsLayers  portalLayers  groups   En este apartado vamos a realizar dos ejercicios:    En primer lugar, vamos a a\u00f1adir la capa de l\u00edmites administrativos al grupo existente de \"admin_areas\".    En segundo lugar, a\u00f1adiremos la capa \"roads\" en un nuevo grupo de capas.", 
            "title": "Configuraci\u00f3n de una nueva capa"
        }, 
        {
            "location": "/config/portal/#conexion-wms", 
            "text": "Cada \"wmsLayer\" se corresponde con una de las capas publicadas en GeoServer, y describe la manera de conectarse al servidor para obtener los datos:         wmsLayers : [\n         {\n           id :  limites_administrativos ,\n           baseUrl :  http://172.16.250.131/geoserver/gwc/service/wms ,\n           wmsName :  capacitacion:limites_administrativos ,\n           imageFormat :  image/png ,\n           visible : true\n        }\n      ],    Es posible copiar y pegar un elemento existente y reemplazar :    el nuevo \"id\" ser\u00e1 distinto a todos los otros, por ejemplo: \"limites_administrativos\".   el nuevo \"wmsName\" ser\u00e1 \"capacitacion:limites_administrativos\" (el nombre de la capa publicada en GeoServer).  la baseUrl debe apuntar al servidor geoserver donde hemos cargado la capa.", 
            "title": "Conexi\u00f3n WMS"
        }, 
        {
            "location": "/config/portal/#capas-del-portal", 
            "text": "Cada \"portalLayer\" representa una capa en el \u00e1rbol de capas del portal y por tanto a\u00f1ade nuevos datos necesarios para mostrar la informaci\u00f3n en la interfaz gr\u00e1fica.             portalLayers : [\n            {\n               id :  limites_administrativos ,\n               active : true,\n               label :  ${ limites_administrativos } ,\n               infoFile :  limites_def.html ,\n               layers : [ country ],\n               inlineLegendUrl :  http://172.16.250.131/geoserver/wms?REQUEST=GetLegendGraphic VERSION=1.0.0 FORMAT=image/png WIDTH=20 HEIGHT=20 LAYER=unredd:country TRANSPARENT=true \n            }\n          ],    A\u00f1adir un nuevo objeto en \"context\", de igual estructura y valores que \"country\", excepto los siguientes cambios:    el nuevo \"id\" ser\u00e1 \"regions\".   como \"label\" se utilizar\u00e1 \"${limites_administrativos}\". De nuevo, esta etiqueta de sintaxis ${...} ser\u00e1 sustituida por un texto en el idioma que\n    corresponda, seg\u00fan los contenidos de \"messages\". Es la etiqueta que se mostrar\u00e1 en la interfaz gr\u00e1fica.  en \"infoFile\" pondremos \"administrative_boundaries_def.html\". Esto crear\u00e1 un enlace a un documento con informaci\u00f3n sobre\n    los datos (localizado en :file: static/loc/ idioma /html/ ).  en \"layers\" pondremos [\"limites_administrativos\"], haciendo referencia al nuevo  layer .  en \"inlineLegendUrl\" estableceremos el par\u00e1metro LAYER as\u00ed  LAYER=capacitacion:limites_administrativos . Esto generar\u00e1\n    una imagen con la leyenda.", 
            "title": "Capas del portal"
        }, 
        {
            "location": "/config/portal/#grupos", 
            "text": "Los \"Groups\" son una estructura recursiva (multinivel) para agrupar visualmente las capas en el panel. El \"group\" de primer nivel construye cada uno de los grupos de capas en forma de persiana desplegable, conteniendo una lista de \"items\" que hacen referencia a los contextos definidos anteriormente.  groups  : [\n    {\n         id  :  admin ,\n         label  :  ${ admin_areas } ,\n         items  : [  countryBoundaries ,  provinces  ]\n    },\n    ...\n]  N\u00f3tese que en la propiedad \"items\", se hace referencia a las \"portalLayers\" definidas anteriormente. Tambi\u00e9n, es posible dentro de dicha propiedad, a\u00f1adir varios subgrupos de manera que las capas contenidas en \u00e9stos se visualicen dentro de una misma pesta\u00f1a, pero agrupados visualmente bajo un t\u00edtulo.  groups  : [\n    {\n         id  :  admin ,\n         label  :  ${ admin_areas } ,\n         items  : [\n            {\n                 id  :  admin1 ,\n                 label  :  Nacional ,\n                 items : [ limite_nacional ]\n            }, {\n                 id  :  admin2 ,\n                 label  :  Regional ,\n                 items : [  provincias  ]\n            }\n        ]\n    },\n    ...\n]    A\u00f1adir un nuevo elemento  { \"context\": \"limites_administrativos\" }  a continuaci\u00f3n de  { \"context\": \"country\" } . Esto incluir\u00e1 la capa en el grupo de \u00e1reas administrativas.    Finalmente, utilizar un validador JSON, para comprobar que la sintaxis del nuevo  layers.json  es correcta, y recargar la p\u00e1gina.", 
            "title": "Grupos"
        }, 
        {
            "location": "/config/portal/#configuracion-de-un-nuevo-grupo-de-capas", 
            "text": "Repetiremos el ejercicio anterior para a\u00f1adir la capa de ciudades, teniendo en cuenta que:    Para el nuevo \"layer\", usaremos el id \"ciudades\" y la capa wms \"capacitacion:ciudades\". Adem\u00e1s, a\u00f1adiremos un nuevo atributo  \"legend\": \"ciudades.png\"  para mostrar la leyenda de la capa. Este atributo hace referencia a una imagen localizada en :file: static/loc/ idioma /images/ .    En el nuevo \"context\", ser\u00e1 m\u00e1s sencillo, s\u00f3lo contendr\u00e1 los tres elementos  \"id\": \"roads\", \"label\": \"${ciudades}\", \"layers\": [\"ciudades\"] .    En \"contextGroups\", crearemos un nuevo grupo llamado \"otros\", con esta sintaxis:    {\n     group : {\n       label :  ${ other } ,\n       items : [\n      {  context :  roads  }\n      ]\n  }    Tras validar el JSON, y recargar la p\u00e1gina, obtendremos la capa de carreteras bajo el nuevo grupo \"Otros\".", 
            "title": "Configuraci\u00f3n de un nuevo grupo de capas"
        }, 
        {
            "location": "/config/temporal/", 
            "text": "Fecha\n\n\nAutores\n\n\n\n\n\n\n\n\n\n\n16 Marzo 2015\n\n\nFernando Gonz\u00e1lez (fernando.gonzalez@fao.org)\n\n\n\n\n\n\n17 Enero 2018\n\n\nMicho Garc\u00eda (micho.garcia@geomati.co)\n\n\n\n\n\n\n\n\n\u00a92013 FAO Forestry\n\n\nExcepto donde quede reflejado de otra manera, la presente documentaci\u00f3n se halla bajo licencia : Creative Commons (Creative Commons - Attribution - Share Alike: http://creativecommons.org/licenses/by-sa/3.0/deed.es)\n\n\n\n\nLa configuraci\u00f3n de capas temporales consta de tres etapas:\n\n\n\n\nPreparaci\u00f3n de los datos\n\n\nPublicaci\u00f3n en GeoServer\n\n\nConfiguraci\u00f3n de la capa en el portal\n\n\n\n\nLos dos primeros pasos dependen del tipo de datos que se quiere publicar, vectorial o raster.\n\n\nPreparaci\u00f3n y publicaci\u00f3n de capas vectoriales\n\n\nLa preparaci\u00f3n consistir\u00e1 en introducir una columna de tipo fecha con la fecha para la cual ese registro es v\u00e1lido. Esto se puede realizar para shapefiles o para bases de datos PostGIS indistintamente, pero el campo ha de ser de tipo fecha.\n\n\nLa publicaci\u00f3n en GeoServer se hace exactamente igual al de cualquier otra capa y la diferencia es que una vez la capa est\u00e1 publicada, hay que ir a la pesta\u00f1a \"Dimensiones\" de la capa en cuesti\u00f3n y habilitar el checkbox para Tiempo. En el combo que aparece como \"Atributo\" hay que seleccionar el campo fecha a\u00f1adido anteriormente, y para \"Presentaci\u00f3n\" hay que seleccionar \"List\". Una vez esta configuraci\u00f3n se guarda, la capa ya est\u00e1 preparada para servirse en distintas instancias temporales.\n\n\n\n\nConfiguraci\u00f3n de la capa en el portal\n\n\nLa configuraci\u00f3n de la capa en el portal s\u00f3lo implica a\u00f1adir un atributo \"timeInstances\" al elemento \nportalLayer\n::\n\n\n{\n        \nid\n : \nmascara_forestal\n,\n        \nlabel\n : \nM\u00e1scara forestal\n,\n        \nlayers\n : [ \nforest_mask_wms\n ],\n        \ntimeInstances\n : \n2000-01-01T00:00:00.000Z,2005-01-01T00:00:00.000Z,2010-01-01T00:00:00.000Z\n\n}\n\n\n\n\n\nEl formato del atributo es una lista de fechas separadas por comas en la que cada fecha tiene el siguiente formato:  \nyyyy-MM-ddTHH:mm:ssZ\n, donde:\n\n\n\n\nyyyy\n es el a\u00f1o\n\n\nMM\n es el mes\n\n\ndd\n es el d\u00eda del mes\n\n\nT\n separa fecha y hora\n\n\nHH\n es la hora en formato 24h\n\n\nmm\n son los minutos\n\n\nss\n son los segundos\n\n\nZ\n indica el final de la fecha\n\n\n\n\n\n\nAnteriormente este par\u00e1metro se llam\u00e1ba \nwmsTime\n y se configuraba en los elementos \nwmsLayer\n por lo que es posible encontrar alg\u00fan fichero con el formato antiguo que est\u00e9 configurado de esta manera.Portal: Configuraci\u00f3n de capas temporales", 
            "title": "Configuraci\u00f3n de capas temporales"
        }, 
        {
            "location": "/config/temporal/#preparacion-y-publicacion-de-capas-vectoriales", 
            "text": "La preparaci\u00f3n consistir\u00e1 en introducir una columna de tipo fecha con la fecha para la cual ese registro es v\u00e1lido. Esto se puede realizar para shapefiles o para bases de datos PostGIS indistintamente, pero el campo ha de ser de tipo fecha.  La publicaci\u00f3n en GeoServer se hace exactamente igual al de cualquier otra capa y la diferencia es que una vez la capa est\u00e1 publicada, hay que ir a la pesta\u00f1a \"Dimensiones\" de la capa en cuesti\u00f3n y habilitar el checkbox para Tiempo. En el combo que aparece como \"Atributo\" hay que seleccionar el campo fecha a\u00f1adido anteriormente, y para \"Presentaci\u00f3n\" hay que seleccionar \"List\". Una vez esta configuraci\u00f3n se guarda, la capa ya est\u00e1 preparada para servirse en distintas instancias temporales.", 
            "title": "Preparaci\u00f3n y publicaci\u00f3n de capas vectoriales"
        }, 
        {
            "location": "/config/temporal/#configuracion-de-la-capa-en-el-portal", 
            "text": "La configuraci\u00f3n de la capa en el portal s\u00f3lo implica a\u00f1adir un atributo \"timeInstances\" al elemento  portalLayer ::  {\n         id  :  mascara_forestal ,\n         label  :  M\u00e1scara forestal ,\n         layers  : [  forest_mask_wms  ],\n         timeInstances  :  2000-01-01T00:00:00.000Z,2005-01-01T00:00:00.000Z,2010-01-01T00:00:00.000Z \n}  El formato del atributo es una lista de fechas separadas por comas en la que cada fecha tiene el siguiente formato:   yyyy-MM-ddTHH:mm:ssZ , donde:   yyyy  es el a\u00f1o  MM  es el mes  dd  es el d\u00eda del mes  T  separa fecha y hora  HH  es la hora en formato 24h  mm  son los minutos  ss  son los segundos  Z  indica el final de la fecha    Anteriormente este par\u00e1metro se llam\u00e1ba  wmsTime  y se configuraba en los elementos  wmsLayer  por lo que es posible encontrar alg\u00fan fichero con el formato antiguo que est\u00e9 configurado de esta manera.Portal: Configuraci\u00f3n de capas temporales", 
            "title": "Configuraci\u00f3n de la capa en el portal"
        }, 
        {
            "location": "/config/raster_temporal/", 
            "text": "Fecha\n\n\nAutores\n\n\n\n\n\n\n\n\n\n\n1 Noviembre 2012\n\n\nStefano Giaccio (Stefano.Giaccio@fao.org)\n\n\n\n\n\n\n1 Diciembre 2012\n\n\nOscar Fonts (oscar.fonts@geomati.co)\n\n\n\n\n\n\n24 Junio 2013\n\n\nFernando Gonz\u00e1lez (fernando.gonzalez@fao.org)\n\n\n\n\n\n\n24 Junio 2013\n\n\nMicho Garc\u00eda (micho.garcia@geomati.co)\n\n\n\n\n\n\n\n\n\u00a92013 FAO Forestry\n\n\nExcepto donde quede reflejado de otra manera, la presente documentaci\u00f3n\nse halla bajo licencia : Creative Commons (Creative Commons -\nAttribution - Share Alike:\n\nhttp://creativecommons.org/licenses/by-sa/3.0/deed.es\n)\n\n\n\n\nEl proceso de configuraci\u00f3n de capas raster en el portal es exactamente el mismo que para las capas vectoriales, ya que tanto unas como otras se exponen a trav\u00e9s de la interfaz WMS, que no hace diferencia entre raster y vector.\n\n\nEs importante tener claro como se trabaja con el archivo \nlayers.json\n. Para ello se recomienda revisar como se estructura este archivo en la documentaci\u00f3n de \nGeoLadris\n.\n\n\nCreaci\u00f3n de capas temporales\n\n\nEs posible a\u00f1adir capas con dimensi\u00f3n temporal de la manera habitual\na\u00f1adiendo un nuevo elemento en \\\"layers\\\" con las siguientes\ncaracter\u00edsticas:\n\n\n\n\nIdentificador: \\\"landsat\\\"\n\n\nEtiqueta: \\\"\\${landsat}\\\"\n\n\nNombre de la capa landsat en GeoServer.\n\n\nFormato de imagen: \\\"image/jpeg\\\"\n\n\n\n\nNovedad\n: Puesto que esta capa dispone de dimensi\u00f3n temporal, debemos indicar al Portal los tiempos para los que se dispone de informaci\u00f3n. Esto lo realizaremos mediante el atributo \\\"wmsTime\\\" con los a\u00f1os 1990, 2000, 2005 y 2010. As\u00ed pues:\n\n\n\n\nA\u00f1adir un nuevo atributo \\\"wmsTime\\\":\n\n\n\n\n\\\"1990-01-01T00:00:00.000Z,2000-01-01T00:00:00.000Z,2005-01-01T00:00:00.000Z,2010-01-01T00:00:00.000Z\\\"\n\n\n\n\n\n\nA\u00f1adir el contexto para esta capa, con las siguientes caracter\u00edsticas:\n\n\n\n\nIdentificador: \\\"landsat\\\"\n\n\nEtiqueta: \\\"\\${landsat}\\\"\n\n\nCapa: [\\\"landsat\\\"]\n\n\nInicialmente desactivada al cargar la p\u00e1gina\n\n\n\n\n\n\n\n\nA\u00f1adir un nuevo grupo con las siguientes caracter\u00edsticas:\n\n\n\n\nEtiqueta: \\\"\\${base_layers}\\\"\n\n\nUn \u00fanico contexto: \\\"landsat\\\"\n\n\n\n\n\n\n\n\nAl finalizar, el Portal deber\u00e1 contener los nuevos elementos. Se deber\u00e1 apreciar c\u00f3mo, adem\u00e1s del nuevo grupo de Capas Base, ha aparecido un nuevo control que permite seleccionar el a\u00f1o de visualizaci\u00f3n.\n\n\n\n\nComprobar que, al desplazar el control de tiempo, se actualizan los contenidos de la capa \n\"landsat\"\n.", 
            "title": "Configuraci\u00f3n de capas raster temporales"
        }, 
        {
            "location": "/config/raster_temporal/#creacion-de-capas-temporales", 
            "text": "Es posible a\u00f1adir capas con dimensi\u00f3n temporal de la manera habitual\na\u00f1adiendo un nuevo elemento en \\\"layers\\\" con las siguientes\ncaracter\u00edsticas:   Identificador: \\\"landsat\\\"  Etiqueta: \\\"\\${landsat}\\\"  Nombre de la capa landsat en GeoServer.  Formato de imagen: \\\"image/jpeg\\\"   Novedad : Puesto que esta capa dispone de dimensi\u00f3n temporal, debemos indicar al Portal los tiempos para los que se dispone de informaci\u00f3n. Esto lo realizaremos mediante el atributo \\\"wmsTime\\\" con los a\u00f1os 1990, 2000, 2005 y 2010. As\u00ed pues:   A\u00f1adir un nuevo atributo \\\"wmsTime\\\":   \\\"1990-01-01T00:00:00.000Z,2000-01-01T00:00:00.000Z,2005-01-01T00:00:00.000Z,2010-01-01T00:00:00.000Z\\\"    A\u00f1adir el contexto para esta capa, con las siguientes caracter\u00edsticas:   Identificador: \\\"landsat\\\"  Etiqueta: \\\"\\${landsat}\\\"  Capa: [\\\"landsat\\\"]  Inicialmente desactivada al cargar la p\u00e1gina     A\u00f1adir un nuevo grupo con las siguientes caracter\u00edsticas:   Etiqueta: \\\"\\${base_layers}\\\"  Un \u00fanico contexto: \\\"landsat\\\"     Al finalizar, el Portal deber\u00e1 contener los nuevos elementos. Se deber\u00e1 apreciar c\u00f3mo, adem\u00e1s del nuevo grupo de Capas Base, ha aparecido un nuevo control que permite seleccionar el a\u00f1o de visualizaci\u00f3n.   Comprobar que, al desplazar el control de tiempo, se actualizan los contenidos de la capa  \"landsat\" .", 
            "title": "Creaci\u00f3n de capas temporales"
        }, 
        {
            "location": "/optimization/", 
            "text": "Fecha\n\n\nAutores\n\n\n\n\n\n\n\n\n\n\n9  Enero 2018\n\n\nV\u00edctor Gonz\u00e1lez (\n)\n\n\n\n\n\n\n15 Enero 2018\n\n\nMicho Garc\u00eda (\n)\n\n\n\n\n\n\n\n\n\u00a92013 FAO Forestry\n\n\nExcepto donde quede reflejado de otra manera, la presente documentaci\u00f3n se halla bajo licencia \nCreative Commons\n.\n\n\n\n\n\n\nA nivel inform\u00e1tico: par\u00e1metros m\u00e1quina virtual, tomcat, etc.\n\n\nA nivel de simbolog\u00eda: leyendas m\u00e1s sencillas y r\u00e1pidas de dibujar para escalas m\u00e1s peque\u00f1as.\n\n\nA nivel de datos: Generaci\u00f3n de versiones m\u00e1s ligeras de las capas vectoriales consultables. Optimizaciones de los datos raster.\n\n\nA nivel de protocolo: Utilizaci\u00f3n de GeoWebCache (cach\u00e9 de teselas)", 
            "title": "Optimizaciones"
        }
    ]
}