{
    "docs": [
        {
            "location": "/", 
            "text": "Fecha\n\n\nAutores\n\n\n\n\n\n\n\n\n\n\n24 Junio 2013\n\n\nFernando Gonz\u00e1lez (\n)\n\n\n\n\n\n\n9  Enero 2018\n\n\nV\u00edctor Gonz\u00e1lez (\n)\n\n\n\n\n\n\n\n\n\u00a92013 FAO Forestry\n\n\nExcepto donde quede reflejado de otra manera, la presente documentaci\u00f3n se halla bajo licencia \nCreative Commons\n.\n\n\n\n\nEn esta documentaci\u00f3n veremos la instalaci\u00f3n y configuraci\u00f3n de los componentes necesarios para la diseminaci\u00f3n de datos espaciales. Los componentes fundamentales del sistema son:\n\n\n\n\nUna base de datos \nPostgreSQL\n.\n\n\nUna instancia de \nGeoServer\n (corriendo sobre Apache Tomcat).\n\n\nUna instancia del \nportal\n de diseminaci\u00f3n (corriendo sobre Apache Tomcat).\n\n\n\n\nEn el siguiente diagrama podemos observar estos componentes, junto con otros de m\u00e1s bajo nivel sobre los que se apoyan (Java, Apache, ...):\n\n\n\n\n\nPara poder instalar estos componentes, en esta documentaci\u00f3n asumimos que contamos con:\n\n\n\n\nLos \ndatos\n listos para su publicaci\u00f3n, tanto vectoriales (\nshapefiles\n) como raster (\nGeoTIFF\n).\n\n\nUn \nservidor Linux\n con acceso p\u00fablico a Internet y posibilidad de realizar tareas administrativas (instalaci\u00f3n, modificaci\u00f3n de ficheros, etc.) en dicho servidor.\n\n\n\n\nUna vez el sistema est\u00e9 instalado se podr\u00e1 conectar a los diferentes componentes de varias maneras:\n\n\n\n\nA \nGeoServer\n (\nHTTP\n) para configurar los servicios OGC, mapas, etc.\n\n\nAl \nportal\n (\nHTTP\n) para visualizar los datos.\n\n\nA la \nbase de datos\n (\nPostGIS\n) desde un cliente GIS (por ejemplo, QGIS) para visualizar y editar los datos.\n\n\nAl \nsistema operativo\n (\nSFTP\n) para transferencia de archivos de configuraci\u00f3n y/o recursos est\u00e1ticos (im\u00e1genes, iconos, etc.).\n\n\nAl \nsistema operativo\n (\nSSH\n) para realizar otras tareas administrativas (instalaci\u00f3n y configuraci\u00f3n de software, copias de seguridad, etc.).\n\n\n\n\nLos pasos a seguir para instalar el sistema son los siguientes:\n\n\n\n\nInventario\n.\n\n\nInstalaci\u00f3n del servidor.\n\n\nInstalaci\u00f3n con Docker\n.\n\n\nInstalaci\u00f3n con paquetes\n.\n\n\nCopias de seguridad\n.\n\n\nRendimiento\n.\n\n\n\n\n\n\nCarga de datos en PostGIS\n.\n\n\nPublicaci\u00f3n de datos en GeoServer\n.\n\n\nConfiguraci\u00f3n del portal\n.\n\n\nOptimizaciones\n.", 
            "title": "Introducci\u00f3n"
        }, 
        {
            "location": "/inventory/", 
            "text": "Lo primero que deberemos hacer, antes de empezar a instalar el sistema, ser\u00e1 hacer un listado de los datos a publicar. Por cada capa que vayamos a publicar, deberemos indicar:\n\n\n\n\nFormato\n: GeoTIFF, ECW, SHP, etc.\n\n\nTama\u00f1o\n (aproximado): 1MB, 10MB, 100MB, 1GB, 10GB, etc.\n\n\nPeriodicidad de la actualizaci\u00f3n\n: Diario, mensual, anual, cada \nn\n a\u00f1os, etc..\n\n\nInstancias temporales\n (si las tiene):\n\n\n2005, 2007, 2011\n\n\nDiario desde 2002.\n\n\n...\n\n\n\n\n\n\nLeyenda\n (si se debe publicar con una leyenda espec\u00edfica): formato en que se puede exportar la leyenda (SLD, QGIS, ArcMap, etc.).\n\n\n\n\nEjemplos:\n\n\n\n\nOrtofotos\n\n\nFormato: GeoTIFF\n\n\nTama\u00f1o: 60MB\n\n\nPeriodicidad de la actualizaci\u00f3n: cada dos a\u00f1os.\n\n\nN\u00famero de instancias temporales: 2012, 2014, 2016, 2018.\n\n\nLeyenda: (ninguno)\n\n\n\n\n\n\nL\u00edmites administrativos\n\n\nFormato: SHP\n\n\nTama\u00f1o: 10MB\n\n\nPeriodicidad de la actualizaci\u00f3n: nunca.\n\n\nInstancias temporales: (ninguna).\n\n\nLeyenda: Fichero SLD", 
            "title": "Inventario"
        }, 
        {
            "location": "/install/docker/", 
            "text": "La instalaci\u00f3n con \nDocker\n es muy sencilla y permite tener el sistema funcionando en muy pocos segundos.\n\n\nSin embargo, en algunos entornos no es posible utilizar Docker o la pol\u00edtica de sistemas lo impide. En tal caso, es posible \ninstalar el sistema mediante paquetes\n.\n\n\n\n\nInstalar Docker\n\n\nEn primer lugar, deberemos instalar \nDocker\n y \ndocker-compose\n en nuestro sistema.\n\n\nSe pueden encontrar unas instrucciones detalladas (para \nDocker\n y \ndocker-compose\n de la instalaci\u00f3n en su web:\n\n\nPara sistemas Ubuntu, existe un script que lo instala autom\u00e1ticamente. Basta con descargarlo y ejecutarlo:\n\n\nwget https://nfms4redd.github.io/documentation/install/docker/install.sh\nchmod +x install.sh\nsudo ./install.sh\n\n\n\n\n\nPara comprobar que se ha instalado correctamente podemos ejecutar:\n\n\ndocker --version\ndocker-compose --version\n\n\n\n\n\nArrancar el sistema NFMS\n\n\nPara arrancar el sistema NFMS con todos sus componentes basta con descargarse el script de arranque y ejecutarlo:\n\n\nwget https://nfms4redd.github.io/documentation/install/docker/setup.sh\nchmod +x setup.sh\nsudo ./setup.sh\n\n\n\n\n\n\n\nIMPORTANTE\n: Este script solo debe ejecutarse una vez. Para reiniciar los servicios habr\u00e1 que utilizar el comando \ndocker-compose\n como se explica \nm\u00e1s abajo\n.\n\n\n\n\nEl script proporciona varias opciones para cambiar la ruta en la que se despliega el portal, la aplicaci\u00f3n a desplegar o el usuario/contrase\u00f1a para la base de datos. Se pueden ver estas opciones con \n-h\n:\n\n\nsudo ./setup.sh -h\n\n\n\n\n\nUna vez el sistema est\u00e1 arrancado podemos acceder al portal en la URL (asumiendo que no se ha cambiado la ruta por defecto) \nhttp://localhost/portal\n.\n\n\nY GeoServer en \nhttp://localhost:8080/geoserver\n.\n\n\nReiniciar el sistema\n\n\nPara reiniciar el sistema basta con ir al directorio de instalaci\u00f3n (por defecto, \n/var/nfms\n) y reiniciar con \ndocker-compose\n:\n\n\ncd\n /var/nfms\ndocker-compose restart\n\n\n\n\n\nEn caso de querer reiniciar un solo componente (\ndb\n, \ngeoserver\n, o \nportal\n), basta con a\u00f1adir el nombre del componente al final:\n\n\ncd\n /var/nfms\ndocker-compose restart db\ndocker-compose restart geoserver\ndocker-compose restart portal\n\n\n\n\n\nVisualizar logs\n\n\nEs posible visualizar los logs de los diferentes componentes, tanto juntos:\n\n\ncd\n /var/nfms\ndocker-compose logs\n\n\n\n\n\ncomo componente a componente:\n\n\ncd\n /var/nfms\ndocker-compose logs db\ndocker-compose logs geoserver\ndocker-compose logs portal", 
            "title": "Instalaci\u00f3n con Docker"
        }, 
        {
            "location": "/install/docker/#instalar-docker", 
            "text": "En primer lugar, deberemos instalar  Docker  y  docker-compose  en nuestro sistema.  Se pueden encontrar unas instrucciones detalladas (para  Docker  y  docker-compose  de la instalaci\u00f3n en su web:  Para sistemas Ubuntu, existe un script que lo instala autom\u00e1ticamente. Basta con descargarlo y ejecutarlo:  wget https://nfms4redd.github.io/documentation/install/docker/install.sh\nchmod +x install.sh\nsudo ./install.sh  Para comprobar que se ha instalado correctamente podemos ejecutar:  docker --version\ndocker-compose --version", 
            "title": "Instalar Docker"
        }, 
        {
            "location": "/install/docker/#arrancar-el-sistema-nfms", 
            "text": "Para arrancar el sistema NFMS con todos sus componentes basta con descargarse el script de arranque y ejecutarlo:  wget https://nfms4redd.github.io/documentation/install/docker/setup.sh\nchmod +x setup.sh\nsudo ./setup.sh   IMPORTANTE : Este script solo debe ejecutarse una vez. Para reiniciar los servicios habr\u00e1 que utilizar el comando  docker-compose  como se explica  m\u00e1s abajo .   El script proporciona varias opciones para cambiar la ruta en la que se despliega el portal, la aplicaci\u00f3n a desplegar o el usuario/contrase\u00f1a para la base de datos. Se pueden ver estas opciones con  -h :  sudo ./setup.sh -h  Una vez el sistema est\u00e1 arrancado podemos acceder al portal en la URL (asumiendo que no se ha cambiado la ruta por defecto)  http://localhost/portal .  Y GeoServer en  http://localhost:8080/geoserver .", 
            "title": "Arrancar el sistema NFMS"
        }, 
        {
            "location": "/install/docker/#reiniciar-el-sistema", 
            "text": "Para reiniciar el sistema basta con ir al directorio de instalaci\u00f3n (por defecto,  /var/nfms ) y reiniciar con  docker-compose :  cd  /var/nfms\ndocker-compose restart  En caso de querer reiniciar un solo componente ( db ,  geoserver , o  portal ), basta con a\u00f1adir el nombre del componente al final:  cd  /var/nfms\ndocker-compose restart db\ndocker-compose restart geoserver\ndocker-compose restart portal", 
            "title": "Reiniciar el sistema"
        }, 
        {
            "location": "/install/docker/#visualizar-logs", 
            "text": "Es posible visualizar los logs de los diferentes componentes, tanto juntos:  cd  /var/nfms\ndocker-compose logs  como componente a componente:  cd  /var/nfms\ndocker-compose logs db\ndocker-compose logs geoserver\ndocker-compose logs portal", 
            "title": "Visualizar logs"
        }, 
        {
            "location": "/install/packages/", 
            "text": "Para la instalaci\u00f3n de todo el sistema mediante paquetes se asume la utilizaci\u00f3n de un servidor con Linux. En caso de no estar familiarizado con este sistema operativo, se recomienda leer antes una \nintroducci\u00f3n\n.\n\n\n\n\nNOTA\n: Esta gu\u00eda se ha realizado utilizando Ubuntu 16.04 (Xenial).\n\n\n\n\nPostgreSQL/PostGIS\n\n\nPara instalar PostgreSQL/PostGIS bastar\u00e1 con ejecutar:\n\n\napt update\napt install -y postgresql postgis\n\n\n\n\n\nUna vez la instalaci\u00f3n ha terminado habr\u00e1 que configurar el acceso desde el exterior de la m\u00e1quina. Para ello editaremos el fichero \n/etc/postgresql/\nversion\n/main/postgresql.conf\n y reemplazaremos la l\u00ednea:\n\n\n#listen_addresses = \nlocalhost\n\n\n\n\n\n\ncon:\n\n\nlisten_addresses = \n*\n\n\n\n\n\n\nEsto sirve para que PostgreSQL acepte conexiones de cualquier m\u00e1quina.\n\n\nPosteriormente a\u00f1adiremos esto al final del fichero \n/etc/postgresql/\nversion\n/main/pg_hba.conf\n:\n\n\nhost    all             all             0.0.0.0/0               md5\n\n\n\n\n\nque sirve para poder hacer login en la base de datos utilizando usuario y contrase\u00f1a desde cualquier m\u00e1quina.\n\n\nPor \u00faltimo arrancaremos el servicio:\n\n\nsystemctl \nenable\n postgresql\nservice postgresql start\n\n\n\n\n\nApache / Tomcat\n\n\nComo hemos visto en la \nintroducci\u00f3n\n, tanto GeoServer como el portal son aplicaciones web Java que se ejecutan en Tomcat. Por tanto, lo primero que tenemos que hacer es instalar Apache y Tomcat:\n\n\napt update\napt install -y tomcat8 apache2\n\n\n\n\n\ny arrancar los servicios:\n\n\nsystemctl \nenable\n tomcat8\nservice tomcat8 start\nsystemctl \nenable\n apache2\nservice apache2 start\n\n\n\n\n\nJAI\n\n\nLas librer\u00edas JAI son unas librer\u00edas Java para el procesado de im\u00e1genes que utiliza GeoServer. Para instalarlas, ejecutaremos los siguientes comandos:\n\n\ncd\n /usr/lib/jvm/java-8-*\nwget http://download.java.net/media/jai/builds/release/1_1_3/jai-1_1_3-lib-linux-amd64-jdk.bin\ntail -n +139 jai-1_1_3-lib-linux-amd64-jdk.bin \n INSTALL-jai\nchmod u+x INSTALL-jai\n./INSTALL-jai\nrm jai-1_1_3-lib-linux-amd64-jdk.bin INSTALL-jai *.txt\nwget http://download.java.net/media/jai-imageio/builds/release/1.1/jai_imageio-1_1-lib-linux-amd64-jdk.bin\ntail -n +215 jai_imageio-1_1-lib-linux-amd64-jdk.bin \n INSTALL-jai_imageio\nchmod u+x INSTALL-jai_imageio\n./INSTALL-jai_imageio\nrm jai_imageio-1_1-lib-linux-amd64-jdk.bin INSTALL-jai_imageio *.txt\n\n\n\n\n\nGeoServer\n\n\nDescargaremos GeoServer:\n\n\ncd\n /tmp\nwget http://sourceforge.net/projects/geoserver/files/GeoServer/2.12.1/geoserver-2.12.1-war.zip\n\n\n\n\n\ny lo desplegaremos en el directorio de aplicaciones de Tomcat:\n\n\nunzip geoserver-*-war.zip -d geoserver\nmv geoserver/geoserver.war /var/lib/tomcat8/webapps\nrm -rf geoserver*\n\n\n\n\n\nDirectorio de configuraci\u00f3n\n\n\nAl desplegar GeoServer, el directorio de datos de GeoServer por defecto est\u00e1 dentro del directorio de aplicaciones de Tomcat. Por ello, si no lo movemos de sitio, cada vez que actualicemos Tomcat o GeoServer, perderemos este directorio de datos. As\u00ed que primero moveremos el directorio por defecto a otra ruta:\n\n\nmv /var/lib/tomcat8/webapps/geoserver/data /var/local/geoserver\n\n\n\n\n\nY luego configuraremos ese directorio cambiando el valor de \nJAVA_OPTS\n en \n/etc/default/tomcat8\n por:\n\n\nJAVA_OPTS\n=\n-server -Djava.awt.headless=true -Xms768m -Xmx1560m -XX:+UseConcMarkSweepGC -XX:NewSize=48m -DGEOSERVER_DATA_DIR=/var/local/geoserver\n\n\n\n\n\n\nPor \u00faltimo, reiniciaremos Tomcat:\n\n\nservice tomcat8 restart\n\n\n\n\n\nPortal\n\n\nDescargaremos el portal en el directorio de aplicaciones de Tomcat:\n\n\nwget http://nullisland.geomati.co:8082/repository/snapshots/org/geoladris/apps/demo/7.0.0-SNAPSHOT/demo-7.0.0-SNAPSHOT.war -O /var/lib/tomcat8/webapps/portal.war\n\n\n\n\n\nDirectorio de configuraci\u00f3n\n\n\nEl portal tiene un directorio de configuraci\u00f3n que por defecto est\u00e1 dentro del directorio de aplicaciones de Tomcat. Por ello, si no lo movemos de sitio, cada vez que actualicemos Tomcat o el portal, perderemos su configuraci\u00f3n. As\u00ed que primero moveremos el directorio por defecto a otra ruta:\n\n\nmkdir /var/geoladris\nmv /var/lib/tomcat8/webapps/portal/WEB-INF/default_config /var/geoladris/portal\n\n\n\n\n\nY luego configuraremos ese directorio al final del fichero \n/etc/default/tomcat8\n:\n\n\nGEOLADRIS_CONFIG_DIR\n=\n/var/geoladris\n\n\n\n\n\nBase de datos\n\n\nEl portal tiene diferentes plugins que acceden a una base de datos para funcionar. Esta base de datos se configura en el fichero \n/etc/tomcat8/Catalina/localhost/portal.xml\n. En \u00e9l encontraremos un elemento \nResource\n con los datos de conexi\u00f3n de la base de datos (\nurl\n, \nusername\n y \npassword\n). En nuestro caso, deber\u00eda quedar algo as\u00ed:\n\n\nResource\n \nname=\njdbc/geoladris\n \nauth=\nContainer\n \ntype=\njavax.sql.DataSource\n\n          \ndriverClassName=\norg.postgresql.Driver\n\n          \nurl=\njdbc:postgresql://localhost:5432/nfms\n\n          \nusername=\nadmin\n \npassword=\nadmin\n\n          \nmaxActive=\n20\n \nmaxIdle=\n10\n \nmaxWait=\n-1\n \n/\n\n\n\n\n\n\nPor \u00faltimo, reiniciaremos Tomcat:\n\n\nservice tomcat8 restart\n\n\n\n\n\nConexi\u00f3n\n\n\nLlegados a este punto deber\u00edamos poder acceder al portal y a GeoServer desde un navegador en las siguientes URLs:\n\n\n\n\nhttp://\nservidor\n:8080/portal\n.\n\n\nhttp://\nservidor\n:8080/geoserver\n.\n\n\n\n\nPara eliminar el puerto \n:8080\n de la URL tendremos que habilitar un proxy de Apache:\n\n\na2enmod proxy_http\n\n\n\n\n\nconfigurarlo escribiendo el fichero \n/etc/apache2/mods-enabled/proxy_http.conf\n con el siguiente contenido:\n\n\nProxyPreserveHost On\nProxyPass /portal  http://localhost:8080/portal\nProxyPass /portal/ http://localhost:8080/portal/\nProxyPassReverse /portal  http://localhost:8080/portal\nProxyPassReverse /portal/ http://localhost:8080/portal/\nProxyPass /geoserver  http://localhost:8080/geoserver\nProxyPass /geoserver/ http://localhost:8080/geoserver/\nProxyPassReverse /geoserver  http://localhost:8080/geoserver\nProxyPassReverse /geoserver/ http://localhost:8080/geoserver/\n\n\n\n\n\ny por \u00faltimo, reiniciar Apache:\n\n\nservice apache2 restart\n\n\n\n\n\nVerificaci\u00f3n del despliegue\n\n\nCuando se reinicia Tomcat, se da el caso de que todas las aplicaciones se inicializan una detr\u00e1s de otra. Por tanto, el tiempo que tarda el portal en iniciarse depende de cu\u00e1ntas aplicaciones haya adem\u00e1s de \u00e9sta y de lo pesadas que sean. Por ejemplo, si tenemos GeoServer con muchos datos cargados, es probable que durante el reinicio de Tomcat el portal tome m\u00e1s tiempo que si estuviera s\u00f3lo.\n\n\nDesde este momento deber\u00edamos poder acceder al portal mediante un navegador en la URL \nhttp://\nservidor\n/portal\n. En el navegador podemos abrir las herramientas de desarrollo y verificar que en las pesta\u00f1as de \nConsola\n y \nRed\n no aparece ning\u00fan error.\n\n\nAdem\u00e1s, se puede verificar que la inicializaci\u00f3n del portal y la visualizaci\u00f3n en el navegador no han dado ning\u00fan error visualizando los logs. Cada vez que el portal se inicializa o se carga en un navegador, el sistema escribe informaci\u00f3n relevante en un fichero de log de Tomcat (\n/var/tomcat/logs/catalina.out\n). En \u00e9l deber\u00edamos encontrar algo como:\n\n\n2018\n-01-10 \n12\n:23:48 INFO  AppContextListener:133 - \n============================================================================\n\n\n2018\n-01-10 \n12\n:23:48 INFO  AppContextListener:134 - Configuration directory: /var/geoladris/portal\n\n2018\n-01-10 \n12\n:23:48 INFO  AppContextListener:135 - \n============================================================================\n\nJan \n10\n, \n2018\n \n12\n:23:48 PM org.apache.catalina.core.StandardContext reload\nINFO: Reloading Context with name \n[\n/portal\n]\n is completed\n\n\n\n\n\nEn caso de que haya alg\u00fan error nos encontraremos con algo as\u00ed:\n\n\nINFO: Despliegue del archivo portal.war de la aplicaci\u00f3n web\n\n2015\n-04-02 \n02\n:34:50 INFO  ConfigFolder:55 - \n============================================================================\n\n\n2015\n-04-02 \n02\n:34:50 INFO  ConfigFolder:56 - PORTAL_CONFIG_DIR: /var/argentina\n\n2015\n-04-02 \n02\n:34:50 INFO  ConfigFolder:57 - \n============================================================================\n\n\n2015\n-04-02 \n02\n:34:50 DEBUG ConfigFolder:73 - Reading portal properties file /var/argentina/portal.properties\n\n2015\n-04-02 \n02\n:34:50 DEBUG ConfigFolder:73 - Reading portal properties file /var/argentina/portal.properties\n\n2015\n-04-02 \n02\n:34:50 ERROR FeedbackContextListener:66 - Database error notifying the comment authors\norg.fao.unredd.portal.PersistenceException: Database error\n    at org.fao.unredd.portal.DBUtils.processConnection\n(\nDBUtils.java:41\n)\n\n    at org.fao.unredd.portal.DBUtils.processConnection\n(\nDBUtils.java:14\n)\n\n    at org.fao.unredd.feedback.DBFeedbackPersistence.getValidatedToNotifyInfo\n(\nDBFeedbackPersistence.java:122\n)\n\n    at org.fao.unredd.feedback.Feedback.notifyValidated\n(\nFeedback.java:83\n)\n\n    at org.fao.unredd.feedback.servlet.FeedbackContextListener\n$1\n.run\n(\nFeedbackContextListener.java:61\n)\n\n    at java.util.TimerThread.mainLoop\n(\nTimer.java:512\n)\n\n    at java.util.TimerThread.run\n(\nTimer.java:462\n)\n\nCaused by: org.apache.tomcat.dbcp.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory \n(\nConexi\u00f3n rechazada. Verifique que el nombre del Host y el puerto sean correctos y que postmaster este aceptando conexiones TCP/IP.\n)\n\n    at org.apache.tomcat.dbcp.dbcp.BasicDataSource.createPoolableConnectionFactory\n(\nBasicDataSource.java:1549\n)\n\n    at org.apache.tomcat.dbcp.dbcp.BasicDataSource.createDataSource\n(\nBasicDataSource.java:1388\n)\n\n    at org.apache.tomcat.dbcp.dbcp.BasicDataSource.getConnection\n(\nBasicDataSource.java:1044\n)\n\n    at org.fao.unredd.portal.DBUtils.processConnection\n(\nDBUtils.java:37\n)\n\n    ... \n6\n more\nCaused by: org.postgresql.util.PSQLException: Conexi\u00f3n rechazada. Verifique que el nombre del Host y el puerto sean correctos y que postmaster este aceptando conexiones TCP/IP.\n    at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl\n(\nConnectionFactoryImpl.java:215\n)\n\n    at org.postgresql.core.ConnectionFactory.openConnection\n(\nConnectionFactory.java:64\n)\n\n    at org.postgresql.jdbc2.AbstractJdbc2Connection.\ninit\n(\nAbstractJdbc2Connection.java:144\n)\n\n    at org.postgresql.jdbc3.AbstractJdbc3Connection.\ninit\n(\nAbstractJdbc3Connection.java:29\n)\n\n    at org.postgresql.jdbc3g.AbstractJdbc3gConnection.\ninit\n(\nAbstractJdbc3gConnection.java:21\n)\n\n    at org.postgresql.jdbc4.AbstractJdbc4Connection.\ninit\n(\nAbstractJdbc4Connection.java:31\n)\n\n    at org.postgresql.jdbc4.Jdbc4Connection.\ninit\n(\nJdbc4Connection.java:24\n)\n\n    at org.postgresql.Driver.makeConnection\n(\nDriver.java:410\n)\n\n    at org.postgresql.Driver.connect\n(\nDriver.java:280\n)\n\n    at org.apache.tomcat.dbcp.dbcp.DriverConnectionFactory.createConnection\n(\nDriverConnectionFactory.java:38\n)\n\n    at org.apache.tomcat.dbcp.dbcp.PoolableConnectionFactory.makeObject\n(\nPoolableConnectionFactory.java:582\n)\n\n    at org.apache.tomcat.dbcp.dbcp.BasicDataSource.validateConnectionFactory\n(\nBasicDataSource.java:1556\n)\n\n    at org.apache.tomcat.dbcp.dbcp.BasicDataSource.createPoolableConnectionFactory\n(\nBasicDataSource.java:1545\n)\n\n    ... \n9\n more\nCaused by: java.net.ConnectException: Connection refused\n    at java.net.PlainSocketImpl.socketConnect\n(\nNative Method\n)\n\n    at java.net.PlainSocketImpl.doConnect\n(\nPlainSocketImpl.java:351\n)\n\n    at java.net.PlainSocketImpl.connectToAddress\n(\nPlainSocketImpl.java:213\n)\n\n    at java.net.PlainSocketImpl.connect\n(\nPlainSocketImpl.java:200\n)\n\n    at java.net.SocksSocketImpl.connect\n(\nSocksSocketImpl.java:366\n)\n\n    at java.net.Socket.connect\n(\nSocket.java:529\n)\n\n    at org.postgresql.core.PGStream.\ninit\n(\nPGStream.java:61\n)\n\n    at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl\n(\nConnectionFactoryImpl.java:109\n)\n\n    ... \n21\n more", 
            "title": "Instalaci\u00f3n con paquetes"
        }, 
        {
            "location": "/install/packages/#postgresqlpostgis", 
            "text": "Para instalar PostgreSQL/PostGIS bastar\u00e1 con ejecutar:  apt update\napt install -y postgresql postgis  Una vez la instalaci\u00f3n ha terminado habr\u00e1 que configurar el acceso desde el exterior de la m\u00e1quina. Para ello editaremos el fichero  /etc/postgresql/ version /main/postgresql.conf  y reemplazaremos la l\u00ednea:  #listen_addresses =  localhost   con:  listen_addresses =  *   Esto sirve para que PostgreSQL acepte conexiones de cualquier m\u00e1quina.  Posteriormente a\u00f1adiremos esto al final del fichero  /etc/postgresql/ version /main/pg_hba.conf :  host    all             all             0.0.0.0/0               md5  que sirve para poder hacer login en la base de datos utilizando usuario y contrase\u00f1a desde cualquier m\u00e1quina.  Por \u00faltimo arrancaremos el servicio:  systemctl  enable  postgresql\nservice postgresql start", 
            "title": "PostgreSQL/PostGIS"
        }, 
        {
            "location": "/install/packages/#apache-tomcat", 
            "text": "Como hemos visto en la  introducci\u00f3n , tanto GeoServer como el portal son aplicaciones web Java que se ejecutan en Tomcat. Por tanto, lo primero que tenemos que hacer es instalar Apache y Tomcat:  apt update\napt install -y tomcat8 apache2  y arrancar los servicios:  systemctl  enable  tomcat8\nservice tomcat8 start\nsystemctl  enable  apache2\nservice apache2 start", 
            "title": "Apache / Tomcat"
        }, 
        {
            "location": "/install/packages/#jai", 
            "text": "Las librer\u00edas JAI son unas librer\u00edas Java para el procesado de im\u00e1genes que utiliza GeoServer. Para instalarlas, ejecutaremos los siguientes comandos:  cd  /usr/lib/jvm/java-8-*\nwget http://download.java.net/media/jai/builds/release/1_1_3/jai-1_1_3-lib-linux-amd64-jdk.bin\ntail -n +139 jai-1_1_3-lib-linux-amd64-jdk.bin   INSTALL-jai\nchmod u+x INSTALL-jai\n./INSTALL-jai\nrm jai-1_1_3-lib-linux-amd64-jdk.bin INSTALL-jai *.txt\nwget http://download.java.net/media/jai-imageio/builds/release/1.1/jai_imageio-1_1-lib-linux-amd64-jdk.bin\ntail -n +215 jai_imageio-1_1-lib-linux-amd64-jdk.bin   INSTALL-jai_imageio\nchmod u+x INSTALL-jai_imageio\n./INSTALL-jai_imageio\nrm jai_imageio-1_1-lib-linux-amd64-jdk.bin INSTALL-jai_imageio *.txt", 
            "title": "JAI"
        }, 
        {
            "location": "/install/packages/#geoserver", 
            "text": "Descargaremos GeoServer:  cd  /tmp\nwget http://sourceforge.net/projects/geoserver/files/GeoServer/2.12.1/geoserver-2.12.1-war.zip  y lo desplegaremos en el directorio de aplicaciones de Tomcat:  unzip geoserver-*-war.zip -d geoserver\nmv geoserver/geoserver.war /var/lib/tomcat8/webapps\nrm -rf geoserver*", 
            "title": "GeoServer"
        }, 
        {
            "location": "/install/packages/#directorio-de-configuracion", 
            "text": "Al desplegar GeoServer, el directorio de datos de GeoServer por defecto est\u00e1 dentro del directorio de aplicaciones de Tomcat. Por ello, si no lo movemos de sitio, cada vez que actualicemos Tomcat o GeoServer, perderemos este directorio de datos. As\u00ed que primero moveremos el directorio por defecto a otra ruta:  mv /var/lib/tomcat8/webapps/geoserver/data /var/local/geoserver  Y luego configuraremos ese directorio cambiando el valor de  JAVA_OPTS  en  /etc/default/tomcat8  por:  JAVA_OPTS = -server -Djava.awt.headless=true -Xms768m -Xmx1560m -XX:+UseConcMarkSweepGC -XX:NewSize=48m -DGEOSERVER_DATA_DIR=/var/local/geoserver   Por \u00faltimo, reiniciaremos Tomcat:  service tomcat8 restart", 
            "title": "Directorio de configuraci\u00f3n"
        }, 
        {
            "location": "/install/packages/#portal", 
            "text": "Descargaremos el portal en el directorio de aplicaciones de Tomcat:  wget http://nullisland.geomati.co:8082/repository/snapshots/org/geoladris/apps/demo/7.0.0-SNAPSHOT/demo-7.0.0-SNAPSHOT.war -O /var/lib/tomcat8/webapps/portal.war", 
            "title": "Portal"
        }, 
        {
            "location": "/install/packages/#directorio-de-configuracion_1", 
            "text": "El portal tiene un directorio de configuraci\u00f3n que por defecto est\u00e1 dentro del directorio de aplicaciones de Tomcat. Por ello, si no lo movemos de sitio, cada vez que actualicemos Tomcat o el portal, perderemos su configuraci\u00f3n. As\u00ed que primero moveremos el directorio por defecto a otra ruta:  mkdir /var/geoladris\nmv /var/lib/tomcat8/webapps/portal/WEB-INF/default_config /var/geoladris/portal  Y luego configuraremos ese directorio al final del fichero  /etc/default/tomcat8 :  GEOLADRIS_CONFIG_DIR = /var/geoladris", 
            "title": "Directorio de configuraci\u00f3n"
        }, 
        {
            "location": "/install/packages/#base-de-datos", 
            "text": "El portal tiene diferentes plugins que acceden a una base de datos para funcionar. Esta base de datos se configura en el fichero  /etc/tomcat8/Catalina/localhost/portal.xml . En \u00e9l encontraremos un elemento  Resource  con los datos de conexi\u00f3n de la base de datos ( url ,  username  y  password ). En nuestro caso, deber\u00eda quedar algo as\u00ed:  Resource   name= jdbc/geoladris   auth= Container   type= javax.sql.DataSource \n           driverClassName= org.postgresql.Driver \n           url= jdbc:postgresql://localhost:5432/nfms \n           username= admin   password= admin \n           maxActive= 20   maxIdle= 10   maxWait= -1   /   Por \u00faltimo, reiniciaremos Tomcat:  service tomcat8 restart", 
            "title": "Base de datos"
        }, 
        {
            "location": "/install/packages/#conexion", 
            "text": "Llegados a este punto deber\u00edamos poder acceder al portal y a GeoServer desde un navegador en las siguientes URLs:   http:// servidor :8080/portal .  http:// servidor :8080/geoserver .   Para eliminar el puerto  :8080  de la URL tendremos que habilitar un proxy de Apache:  a2enmod proxy_http  configurarlo escribiendo el fichero  /etc/apache2/mods-enabled/proxy_http.conf  con el siguiente contenido:  ProxyPreserveHost On\nProxyPass /portal  http://localhost:8080/portal\nProxyPass /portal/ http://localhost:8080/portal/\nProxyPassReverse /portal  http://localhost:8080/portal\nProxyPassReverse /portal/ http://localhost:8080/portal/\nProxyPass /geoserver  http://localhost:8080/geoserver\nProxyPass /geoserver/ http://localhost:8080/geoserver/\nProxyPassReverse /geoserver  http://localhost:8080/geoserver\nProxyPassReverse /geoserver/ http://localhost:8080/geoserver/  y por \u00faltimo, reiniciar Apache:  service apache2 restart", 
            "title": "Conexi\u00f3n"
        }, 
        {
            "location": "/install/packages/#verificacion-del-despliegue", 
            "text": "Cuando se reinicia Tomcat, se da el caso de que todas las aplicaciones se inicializan una detr\u00e1s de otra. Por tanto, el tiempo que tarda el portal en iniciarse depende de cu\u00e1ntas aplicaciones haya adem\u00e1s de \u00e9sta y de lo pesadas que sean. Por ejemplo, si tenemos GeoServer con muchos datos cargados, es probable que durante el reinicio de Tomcat el portal tome m\u00e1s tiempo que si estuviera s\u00f3lo.  Desde este momento deber\u00edamos poder acceder al portal mediante un navegador en la URL  http:// servidor /portal . En el navegador podemos abrir las herramientas de desarrollo y verificar que en las pesta\u00f1as de  Consola  y  Red  no aparece ning\u00fan error.  Adem\u00e1s, se puede verificar que la inicializaci\u00f3n del portal y la visualizaci\u00f3n en el navegador no han dado ning\u00fan error visualizando los logs. Cada vez que el portal se inicializa o se carga en un navegador, el sistema escribe informaci\u00f3n relevante en un fichero de log de Tomcat ( /var/tomcat/logs/catalina.out ). En \u00e9l deber\u00edamos encontrar algo como:  2018 -01-10  12 :23:48 INFO  AppContextListener:133 -  ============================================================================  2018 -01-10  12 :23:48 INFO  AppContextListener:134 - Configuration directory: /var/geoladris/portal 2018 -01-10  12 :23:48 INFO  AppContextListener:135 -  ============================================================================ \nJan  10 ,  2018   12 :23:48 PM org.apache.catalina.core.StandardContext reload\nINFO: Reloading Context with name  [ /portal ]  is completed  En caso de que haya alg\u00fan error nos encontraremos con algo as\u00ed:  INFO: Despliegue del archivo portal.war de la aplicaci\u00f3n web 2015 -04-02  02 :34:50 INFO  ConfigFolder:55 -  ============================================================================  2015 -04-02  02 :34:50 INFO  ConfigFolder:56 - PORTAL_CONFIG_DIR: /var/argentina 2015 -04-02  02 :34:50 INFO  ConfigFolder:57 -  ============================================================================  2015 -04-02  02 :34:50 DEBUG ConfigFolder:73 - Reading portal properties file /var/argentina/portal.properties 2015 -04-02  02 :34:50 DEBUG ConfigFolder:73 - Reading portal properties file /var/argentina/portal.properties 2015 -04-02  02 :34:50 ERROR FeedbackContextListener:66 - Database error notifying the comment authors\norg.fao.unredd.portal.PersistenceException: Database error\n    at org.fao.unredd.portal.DBUtils.processConnection ( DBUtils.java:41 ) \n    at org.fao.unredd.portal.DBUtils.processConnection ( DBUtils.java:14 ) \n    at org.fao.unredd.feedback.DBFeedbackPersistence.getValidatedToNotifyInfo ( DBFeedbackPersistence.java:122 ) \n    at org.fao.unredd.feedback.Feedback.notifyValidated ( Feedback.java:83 ) \n    at org.fao.unredd.feedback.servlet.FeedbackContextListener $1 .run ( FeedbackContextListener.java:61 ) \n    at java.util.TimerThread.mainLoop ( Timer.java:512 ) \n    at java.util.TimerThread.run ( Timer.java:462 ) \nCaused by: org.apache.tomcat.dbcp.dbcp.SQLNestedException: Cannot create PoolableConnectionFactory  ( Conexi\u00f3n rechazada. Verifique que el nombre del Host y el puerto sean correctos y que postmaster este aceptando conexiones TCP/IP. ) \n    at org.apache.tomcat.dbcp.dbcp.BasicDataSource.createPoolableConnectionFactory ( BasicDataSource.java:1549 ) \n    at org.apache.tomcat.dbcp.dbcp.BasicDataSource.createDataSource ( BasicDataSource.java:1388 ) \n    at org.apache.tomcat.dbcp.dbcp.BasicDataSource.getConnection ( BasicDataSource.java:1044 ) \n    at org.fao.unredd.portal.DBUtils.processConnection ( DBUtils.java:37 ) \n    ...  6  more\nCaused by: org.postgresql.util.PSQLException: Conexi\u00f3n rechazada. Verifique que el nombre del Host y el puerto sean correctos y que postmaster este aceptando conexiones TCP/IP.\n    at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl ( ConnectionFactoryImpl.java:215 ) \n    at org.postgresql.core.ConnectionFactory.openConnection ( ConnectionFactory.java:64 ) \n    at org.postgresql.jdbc2.AbstractJdbc2Connection. init ( AbstractJdbc2Connection.java:144 ) \n    at org.postgresql.jdbc3.AbstractJdbc3Connection. init ( AbstractJdbc3Connection.java:29 ) \n    at org.postgresql.jdbc3g.AbstractJdbc3gConnection. init ( AbstractJdbc3gConnection.java:21 ) \n    at org.postgresql.jdbc4.AbstractJdbc4Connection. init ( AbstractJdbc4Connection.java:31 ) \n    at org.postgresql.jdbc4.Jdbc4Connection. init ( Jdbc4Connection.java:24 ) \n    at org.postgresql.Driver.makeConnection ( Driver.java:410 ) \n    at org.postgresql.Driver.connect ( Driver.java:280 ) \n    at org.apache.tomcat.dbcp.dbcp.DriverConnectionFactory.createConnection ( DriverConnectionFactory.java:38 ) \n    at org.apache.tomcat.dbcp.dbcp.PoolableConnectionFactory.makeObject ( PoolableConnectionFactory.java:582 ) \n    at org.apache.tomcat.dbcp.dbcp.BasicDataSource.validateConnectionFactory ( BasicDataSource.java:1556 ) \n    at org.apache.tomcat.dbcp.dbcp.BasicDataSource.createPoolableConnectionFactory ( BasicDataSource.java:1545 ) \n    ...  9  more\nCaused by: java.net.ConnectException: Connection refused\n    at java.net.PlainSocketImpl.socketConnect ( Native Method ) \n    at java.net.PlainSocketImpl.doConnect ( PlainSocketImpl.java:351 ) \n    at java.net.PlainSocketImpl.connectToAddress ( PlainSocketImpl.java:213 ) \n    at java.net.PlainSocketImpl.connect ( PlainSocketImpl.java:200 ) \n    at java.net.SocksSocketImpl.connect ( SocksSocketImpl.java:366 ) \n    at java.net.Socket.connect ( Socket.java:529 ) \n    at org.postgresql.core.PGStream. init ( PGStream.java:61 ) \n    at org.postgresql.core.v3.ConnectionFactoryImpl.openConnectionImpl ( ConnectionFactoryImpl.java:109 ) \n    ...  21  more", 
            "title": "Verificaci\u00f3n del despliegue"
        }, 
        {
            "location": "/install/backups/", 
            "text": "", 
            "title": "Copias de seguridad"
        }, 
        {
            "location": "/install/performance/", 
            "text": "Rendimiento (\u00bfesto va aqu\u00ed?)", 
            "title": "Rendimiento"
        }, 
        {
            "location": "/postgis/", 
            "text": "Enlaces a geotalleres\n\n\nConfiguraci\u00f3n inicial\n\n\nUna vez el servicio est\u00e1 funcionando, crearemos una nueva base de datos:\n\n\nsudo -u postgres createdb nfms\n\n\n\n\n\ny conectaremos a ella:\n\n\nsudo -u postgres psql -d nfms\n\n\n\n\n\nEstando conectados deberemos activar PostGIS en nuestra base de datos:\n\n\nCREATE EXTENSION postgis\n;\n\n\n\n\n\n\ny crear dos usuarios, uno para administraci\u00f3n y otro s\u00f3lo para lectura (\n\u00a1es importante cambiar las contrase\u00f1as por otras m\u00e1s seguras!\n):\n\n\nCREATE ROLE admin WITH LOGIN CREATEROLE PASSWORD \nadmin\n;\n\nCREATE ROLE \nreadonly\n WITH LOGIN PASSWORD \nreadonly\n;\n\n\n\n\n\n\nPor \u00faltimo, crearemos el esquema que contendr\u00e1 nuestros datos espaciales:\n\n\nCREATE SCHEMA spatial AUTHORIZATION admin\n;\n\n\n\n\n\n\nPara salir de la conexi\u00f3n a la base de datos basta con escribir \n\\q\n.\n\n\nA partir de ahora se deber\u00eda poder conectar a la base de datos sin problemas desde QGIS o pgAdmin.", 
            "title": "Carga de datos en PostGIS"
        }, 
        {
            "location": "/postgis/#configuracion-inicial", 
            "text": "Una vez el servicio est\u00e1 funcionando, crearemos una nueva base de datos:  sudo -u postgres createdb nfms  y conectaremos a ella:  sudo -u postgres psql -d nfms  Estando conectados deberemos activar PostGIS en nuestra base de datos:  CREATE EXTENSION postgis ;   y crear dos usuarios, uno para administraci\u00f3n y otro s\u00f3lo para lectura ( \u00a1es importante cambiar las contrase\u00f1as por otras m\u00e1s seguras! ):  CREATE ROLE admin WITH LOGIN CREATEROLE PASSWORD  admin ; \nCREATE ROLE  readonly  WITH LOGIN PASSWORD  readonly ;   Por \u00faltimo, crearemos el esquema que contendr\u00e1 nuestros datos espaciales:  CREATE SCHEMA spatial AUTHORIZATION admin ;   Para salir de la conexi\u00f3n a la base de datos basta con escribir  \\q .  A partir de ahora se deber\u00eda poder conectar a la base de datos sin problemas desde QGIS o pgAdmin.", 
            "title": "Configuraci\u00f3n inicial"
        }, 
        {
            "location": "/geoserver/", 
            "text": "Enlaces a geotalleres", 
            "title": "Publicaci\u00f3n de datos en GeoServer"
        }, 
        {
            "location": "/portal/", 
            "text": "Fecha\n\n\nAutores\n\n\n\n\n\n\n\n\n\n\n1 Noviembre 2012\n\n\nStefano Giaccio (Stefano.Giaccio@fao.org)\n\n\n\n\n\n\n1 Diciembre 2012\n\n\nOscar Fonts (oscar.fonts@geomati.co)\n\n\n\n\n\n\n24 Junio 2013\n\n\nFernando Gonz\u00e1lez (fernando.gonzalez@fao.org)\n\n\n\n\n\n\n15 Enero 2018\n\n\nMichio Garc\u00eda (micho.garcia@geomati.co)\n\n\n\n\n\n\n\n\n\n\n\u00a92013 FAO Forestry\n\n\nExcepto donde quede reflejado de otra manera, la presente documentaci\u00f3n se halla bajo licencia : \nCreative Commons\n\n\n\n\nPara configurar el portal y adaptarlo a cada pais se tendr\u00e1 que realizar cierta modificaciones en la estructura de la aplicaci\u00f3n instalada. El proceso de configuraci\u00f3n se podr\u00e1 seguir a partir de la \ndocumentaci\u00f3n de la plataforma\n\n\nA continuaci\u00f3n se presentan una peque\u00f1a guia de aprendizaje para la configuraci\u00f3n de nuevas capas.\n\n\nConfiguraci\u00f3n de una nueva capa\n\n\nLa definici\u00f3n de las capas a mostrar en el Portal se encuentra en el fichero \nlayers.json\n.\n\n\nContiene la informaci\u00f3n para asociar los elementos de la interfaz de usuario (panel con la lista de capas en la parte izquierda de la p\u00e1gina) con las capas WMS publicadas en GeoServer, personalizar las leyendas, y definir cu\u00e1les de las capas son interrogables. Tambi\u00e9n clasifica las capas por grupos.\n\n\nEl formato utilizado para este fichero de configuraci\u00f3n es JSON (JavaScript Object Notation), que es un formato para la representaci\u00f3n de datos. Est\u00e1 fuera del objetivo de esta gu\u00eda el aprendizaje de JSON, pero se exponen a continuaci\u00f3n algunas nociones b\u00e1sicas:\n\n\n\n\n\n\nLos valores en JSON pueden ser: n\u00fameros, cadenas de car\u00e1cteres, booleanos, arrays, objetos y el valor nulo. Por ejemplo: 13, \"hola mundo\", true, [12, 5, 2], {\"id\":3}.\n\n\n\n\n\n\nLos objetos est\u00e1n delimitados por llaves (\n{}\n) y contienen una serie de pares atributo-valor separados por comas. Los pares atributo/valor consisten en un nombre de propiedad entrecomillado, dos puntos y el valor. Por ejemplo podemos tener el siguiente elemento:\n\n\n{\n    \nid\n:12,\n    \nnombre\n:\npaco\n,\n    \nedad\n:55\n}\n\n\n\n\n\n\n\n\n\no incluso un elemento dentro de otro:\n\n\n{\n    \nempresa\n:\nzapatos smith\n,\n    \npropietario\n:{\n        \nid\n:12,\n        \nnombre\n:\njohn smith\n,\n        \nedad\n:55\n    },\n    \npais\n:\nArgentina\n\n}\n\n\n\n\n\n\n\nLos arrays especifican sus valores entre corchetes ([]) y separados por comas.\n[1, 2, 3, 4, 5]\n\n\n\n[\n\n    \n{\n\n        \nid\n:12,\n\n        \nnombre\n:\njohn smith\n,\n\n        \nedad\n:34\n\n    \n},\n\n    \n{\n\n        \nid\n:12,\n\n        \nnombre\n:\nsarah smith\n,\n\n        \nedad\n:22\n\n    \n},\n\n    \n{\n\n        \nid\n:12,\n\n        \nnombre\n:\nClark Kent\n,\n\n        \nedad\n:43\n\n    \n}\n\n\n]\n\n\n\n\n\n\n\n\n\n\nAlgunos recursos JSON:\n\n\n\n\nIntroducci\u00f3n al formato JSON\n\n\nValidador de JSON\n\n\nValidador en l\u00ednea de comandos: \npython -mjson.tool \nfichero.json\n\n\n\n\nEl fichero \nlayers.json\n contiene tres secciones:\n\n\n\n\nwmsLayers\n\n\nportalLayers\n\n\ngroups\n\n\n\n\nEn este apartado vamos a realizar dos ejercicios:\n\n\n\n\n\n\nEn primer lugar, vamos a a\u00f1adir la capa de l\u00edmites administrativos al grupo existente de \"admin_areas\".\n\n\n\n\n\n\nEn segundo lugar, a\u00f1adiremos la capa \"roads\" en un nuevo grupo de capas.\n\n\n\n\n\n\nConexi\u00f3n WMS\n\n\nCada \"wmsLayer\" se corresponde con una de las capas publicadas en GeoServer, y describe la manera de conectarse al servidor para obtener los datos:\n\n\n      \nwmsLayers\n: [\n         {\n          \nid\n: \nlimites_administrativos\n,\n          \nbaseUrl\n: \nhttp://172.16.250.131/geoserver/gwc/service/wms\n,\n          \nwmsName\n: \ncapacitacion:limites_administrativos\n,\n          \nimageFormat\n: \nimage/png\n,\n          \nvisible\n: true\n        }\n      ],\n\n\n\n\n\n\n\n\n\nEs posible copiar y pegar un elemento existente y reemplazar :\n\n\n\n\n\n\nel nuevo \"id\" ser\u00e1 distinto a todos los otros, por ejemplo: \"limites_administrativos\".\n\n\n\n\nel nuevo \"wmsName\" ser\u00e1 \"capacitacion:limites_administrativos\" (el nombre de la capa publicada en GeoServer).\n\n\nla baseUrl debe apuntar al servidor geoserver donde hemos cargado la capa.\n\n\n\n\nCapas del portal\n\n\nCada \"portalLayer\" representa una capa en el \u00e1rbol de capas del portal y por tanto a\u00f1ade nuevos datos necesarios para mostrar la informaci\u00f3n en la interfaz gr\u00e1fica.\n\n\n          \nportalLayers\n: [\n            {\n              \nid\n: \nlimites_administrativos\n,\n              \nactive\n: true,\n              \nlabel\n: \n${\nlimites_administrativos\n}\n,\n              \ninfoFile\n: \nlimites_def.html\n,\n              \nlayers\n: [\ncountry\n],\n              \ninlineLegendUrl\n: \nhttp://172.16.250.131/geoserver/wms?REQUEST=GetLegendGraphic\nVERSION=1.0.0\nFORMAT=image/png\nWIDTH=20\nHEIGHT=20\nLAYER=unredd:country\nTRANSPARENT=true\n\n            }\n          ],\n\n\n\n\n\n\n\n\n\nA\u00f1adir un nuevo objeto en \"context\", de igual estructura y valores que \"country\", excepto los siguientes cambios:\n\n\n\n\n\n\nel nuevo \"id\" ser\u00e1 \"regions\".\n\n\n\n\ncomo \"label\" se utilizar\u00e1 \"${limites_administrativos}\". De nuevo, esta etiqueta de sintaxis ${...} ser\u00e1 sustituida por un texto en el idioma que\n    corresponda, seg\u00fan los contenidos de \"messages\". Es la etiqueta que se mostrar\u00e1 en la interfaz gr\u00e1fica.\n\n\nen \"infoFile\" pondremos \"administrative_boundaries_def.html\". Esto crear\u00e1 un enlace a un documento con informaci\u00f3n sobre\n    los datos (localizado en :file:\nstatic/loc/\nidioma\n/html/\n).\n\n\nen \"layers\" pondremos [\"limites_administrativos\"], haciendo referencia al nuevo \nlayer\n.\n\n\nen \"inlineLegendUrl\" estableceremos el par\u00e1metro LAYER as\u00ed \nLAYER=capacitacion:limites_administrativos\n. Esto generar\u00e1\n    una imagen con la leyenda.\n\n\n\n\nGrupos\n\n\nLos \"Groups\" son una estructura recursiva (multinivel) para agrupar visualmente las capas en el panel.\nEl \"group\" de primer nivel construye cada uno de los grupos de capas en forma de persiana desplegable, conteniendo una lista de\n\"items\" que hacen referencia a los contextos definidos anteriormente.\n\n\ngroups\n : [\n    {\n        \nid\n : \nadmin\n,\n        \nlabel\n : \n${\nadmin_areas\n}\n,\n        \nitems\n : [ \ncountryBoundaries\n, \nprovinces\n ]\n    },\n    ...\n]\n\n\n\n\n\nN\u00f3tese que en la propiedad \"items\", se hace referencia a las \"portalLayers\" definidas anteriormente. Tambi\u00e9n, es posible dentro de dicha propiedad, a\u00f1adir varios subgrupos de manera que las capas contenidas en \u00e9stos se visualicen dentro de una misma pesta\u00f1a, pero agrupados visualmente bajo un t\u00edtulo.\n\n\ngroups\n : [\n    {\n        \nid\n : \nadmin\n,\n        \nlabel\n : \n${\nadmin_areas\n}\n,\n        \nitems\n : [\n            {\n                \nid\n : \nadmin1\n,\n                \nlabel\n : \nNacional\n,\n                \nitems\n: [\nlimite_nacional\n]\n            }, {\n                \nid\n : \nadmin2\n,\n                \nlabel\n : \nRegional\n,\n                \nitems\n: [ \nprovincias\n ]\n            }\n        ]\n    },\n    ...\n]\n\n\n\n\n\n\n\n\n\nA\u00f1adir un nuevo elemento \n{ \"context\": \"limites_administrativos\" }\n a continuaci\u00f3n de \n{ \"context\": \"country\" }\n. Esto incluir\u00e1 la capa en el grupo de \u00e1reas administrativas.\n\n\n\n\n\n\nFinalmente, utilizar un validador JSON, para comprobar que la sintaxis del nuevo \nlayers.json\n es correcta, y recargar la p\u00e1gina.\n\n\n\n\n\n\nConfiguraci\u00f3n de un nuevo grupo de capas\n\n\nRepetiremos el ejercicio anterior para a\u00f1adir la capa de ciudades, teniendo en cuenta que:\n\n\n\n\n\n\nPara el nuevo \"layer\", usaremos el id \"ciudades\" y la capa wms \"capacitacion:ciudades\". Adem\u00e1s, a\u00f1adiremos un nuevo atributo \n\"legend\": \"ciudades.png\"\n para mostrar la leyenda de la capa. Este atributo hace referencia a una imagen localizada en :file:\nstatic/loc/\nidioma\n/images/\n.\n\n\n\n\n\n\nEn el nuevo \"context\", ser\u00e1 m\u00e1s sencillo, s\u00f3lo contendr\u00e1 los tres elementos \n\"id\": \"roads\", \"label\": \"${ciudades}\", \"layers\": [\"ciudades\"]\n.\n\n\n\n\n\n\nEn \"contextGroups\", crearemos un nuevo grupo llamado \"otros\", con esta sintaxis:\n\n\n  {\n    \ngroup\n: {\n      \nlabel\n: \n${\nother\n}\n,\n      \nitems\n: [\n      { \ncontext\n: \nroads\n }\n      ]\n  }\n\n\n\n\n\n\n\n\n\nTras validar el JSON, y recargar la p\u00e1gina, obtendremos la capa de carreteras bajo el nuevo grupo \"Otros\".", 
            "title": "Configuraci\u00f3n del portal"
        }, 
        {
            "location": "/portal/#configuracion-de-una-nueva-capa", 
            "text": "La definici\u00f3n de las capas a mostrar en el Portal se encuentra en el fichero  layers.json .  Contiene la informaci\u00f3n para asociar los elementos de la interfaz de usuario (panel con la lista de capas en la parte izquierda de la p\u00e1gina) con las capas WMS publicadas en GeoServer, personalizar las leyendas, y definir cu\u00e1les de las capas son interrogables. Tambi\u00e9n clasifica las capas por grupos.  El formato utilizado para este fichero de configuraci\u00f3n es JSON (JavaScript Object Notation), que es un formato para la representaci\u00f3n de datos. Est\u00e1 fuera del objetivo de esta gu\u00eda el aprendizaje de JSON, pero se exponen a continuaci\u00f3n algunas nociones b\u00e1sicas:    Los valores en JSON pueden ser: n\u00fameros, cadenas de car\u00e1cteres, booleanos, arrays, objetos y el valor nulo. Por ejemplo: 13, \"hola mundo\", true, [12, 5, 2], {\"id\":3}.    Los objetos est\u00e1n delimitados por llaves ( {} ) y contienen una serie de pares atributo-valor separados por comas. Los pares atributo/valor consisten en un nombre de propiedad entrecomillado, dos puntos y el valor. Por ejemplo podemos tener el siguiente elemento:  {\n     id :12,\n     nombre : paco ,\n     edad :55\n}    o incluso un elemento dentro de otro:  {\n     empresa : zapatos smith ,\n     propietario :{\n         id :12,\n         nombre : john smith ,\n         edad :55\n    },\n     pais : Argentina \n}   Los arrays especifican sus valores entre corchetes ([]) y separados por comas. [1, 2, 3, 4, 5]  [ \n     { \n         id :12, \n         nombre : john smith , \n         edad :34 \n     }, \n     { \n         id :12, \n         nombre : sarah smith , \n         edad :22 \n     }, \n     { \n         id :12, \n         nombre : Clark Kent , \n         edad :43 \n     }  ]     Algunos recursos JSON:   Introducci\u00f3n al formato JSON  Validador de JSON  Validador en l\u00ednea de comandos:  python -mjson.tool  fichero.json   El fichero  layers.json  contiene tres secciones:   wmsLayers  portalLayers  groups   En este apartado vamos a realizar dos ejercicios:    En primer lugar, vamos a a\u00f1adir la capa de l\u00edmites administrativos al grupo existente de \"admin_areas\".    En segundo lugar, a\u00f1adiremos la capa \"roads\" en un nuevo grupo de capas.", 
            "title": "Configuraci\u00f3n de una nueva capa"
        }, 
        {
            "location": "/portal/#conexion-wms", 
            "text": "Cada \"wmsLayer\" se corresponde con una de las capas publicadas en GeoServer, y describe la manera de conectarse al servidor para obtener los datos:         wmsLayers : [\n         {\n           id :  limites_administrativos ,\n           baseUrl :  http://172.16.250.131/geoserver/gwc/service/wms ,\n           wmsName :  capacitacion:limites_administrativos ,\n           imageFormat :  image/png ,\n           visible : true\n        }\n      ],    Es posible copiar y pegar un elemento existente y reemplazar :    el nuevo \"id\" ser\u00e1 distinto a todos los otros, por ejemplo: \"limites_administrativos\".   el nuevo \"wmsName\" ser\u00e1 \"capacitacion:limites_administrativos\" (el nombre de la capa publicada en GeoServer).  la baseUrl debe apuntar al servidor geoserver donde hemos cargado la capa.", 
            "title": "Conexi\u00f3n WMS"
        }, 
        {
            "location": "/portal/#capas-del-portal", 
            "text": "Cada \"portalLayer\" representa una capa en el \u00e1rbol de capas del portal y por tanto a\u00f1ade nuevos datos necesarios para mostrar la informaci\u00f3n en la interfaz gr\u00e1fica.             portalLayers : [\n            {\n               id :  limites_administrativos ,\n               active : true,\n               label :  ${ limites_administrativos } ,\n               infoFile :  limites_def.html ,\n               layers : [ country ],\n               inlineLegendUrl :  http://172.16.250.131/geoserver/wms?REQUEST=GetLegendGraphic VERSION=1.0.0 FORMAT=image/png WIDTH=20 HEIGHT=20 LAYER=unredd:country TRANSPARENT=true \n            }\n          ],    A\u00f1adir un nuevo objeto en \"context\", de igual estructura y valores que \"country\", excepto los siguientes cambios:    el nuevo \"id\" ser\u00e1 \"regions\".   como \"label\" se utilizar\u00e1 \"${limites_administrativos}\". De nuevo, esta etiqueta de sintaxis ${...} ser\u00e1 sustituida por un texto en el idioma que\n    corresponda, seg\u00fan los contenidos de \"messages\". Es la etiqueta que se mostrar\u00e1 en la interfaz gr\u00e1fica.  en \"infoFile\" pondremos \"administrative_boundaries_def.html\". Esto crear\u00e1 un enlace a un documento con informaci\u00f3n sobre\n    los datos (localizado en :file: static/loc/ idioma /html/ ).  en \"layers\" pondremos [\"limites_administrativos\"], haciendo referencia al nuevo  layer .  en \"inlineLegendUrl\" estableceremos el par\u00e1metro LAYER as\u00ed  LAYER=capacitacion:limites_administrativos . Esto generar\u00e1\n    una imagen con la leyenda.", 
            "title": "Capas del portal"
        }, 
        {
            "location": "/portal/#grupos", 
            "text": "Los \"Groups\" son una estructura recursiva (multinivel) para agrupar visualmente las capas en el panel.\nEl \"group\" de primer nivel construye cada uno de los grupos de capas en forma de persiana desplegable, conteniendo una lista de\n\"items\" que hacen referencia a los contextos definidos anteriormente.  groups  : [\n    {\n         id  :  admin ,\n         label  :  ${ admin_areas } ,\n         items  : [  countryBoundaries ,  provinces  ]\n    },\n    ...\n]  N\u00f3tese que en la propiedad \"items\", se hace referencia a las \"portalLayers\" definidas anteriormente. Tambi\u00e9n, es posible dentro de dicha propiedad, a\u00f1adir varios subgrupos de manera que las capas contenidas en \u00e9stos se visualicen dentro de una misma pesta\u00f1a, pero agrupados visualmente bajo un t\u00edtulo.  groups  : [\n    {\n         id  :  admin ,\n         label  :  ${ admin_areas } ,\n         items  : [\n            {\n                 id  :  admin1 ,\n                 label  :  Nacional ,\n                 items : [ limite_nacional ]\n            }, {\n                 id  :  admin2 ,\n                 label  :  Regional ,\n                 items : [  provincias  ]\n            }\n        ]\n    },\n    ...\n]    A\u00f1adir un nuevo elemento  { \"context\": \"limites_administrativos\" }  a continuaci\u00f3n de  { \"context\": \"country\" } . Esto incluir\u00e1 la capa en el grupo de \u00e1reas administrativas.    Finalmente, utilizar un validador JSON, para comprobar que la sintaxis del nuevo  layers.json  es correcta, y recargar la p\u00e1gina.", 
            "title": "Grupos"
        }, 
        {
            "location": "/portal/#configuracion-de-un-nuevo-grupo-de-capas", 
            "text": "Repetiremos el ejercicio anterior para a\u00f1adir la capa de ciudades, teniendo en cuenta que:    Para el nuevo \"layer\", usaremos el id \"ciudades\" y la capa wms \"capacitacion:ciudades\". Adem\u00e1s, a\u00f1adiremos un nuevo atributo  \"legend\": \"ciudades.png\"  para mostrar la leyenda de la capa. Este atributo hace referencia a una imagen localizada en :file: static/loc/ idioma /images/ .    En el nuevo \"context\", ser\u00e1 m\u00e1s sencillo, s\u00f3lo contendr\u00e1 los tres elementos  \"id\": \"roads\", \"label\": \"${ciudades}\", \"layers\": [\"ciudades\"] .    En \"contextGroups\", crearemos un nuevo grupo llamado \"otros\", con esta sintaxis:    {\n     group : {\n       label :  ${ other } ,\n       items : [\n      {  context :  roads  }\n      ]\n  }    Tras validar el JSON, y recargar la p\u00e1gina, obtendremos la capa de carreteras bajo el nuevo grupo \"Otros\".", 
            "title": "Configuraci\u00f3n de un nuevo grupo de capas"
        }, 
        {
            "location": "/optimization/", 
            "text": "A nivel inform\u00e1tico: par\u00e1metros m\u00e1quina virtual, tomcat, etc.\n\n\nA nivel de simbolog\u00eda: leyendas m\u00e1s sencillas y r\u00e1pidas de dibujar para escalas m\u00e1s peque\u00f1as.\n\n\nA nivel de datos: Generaci\u00f3n de versiones m\u00e1s ligeras de las capas vectoriales consultables. Optimizaciones de los datos raster.\n\n\nA nivel de protocolo: Utilizaci\u00f3n de GeoWebCache (cach\u00e9 de teselas)", 
            "title": "Optimizaciones"
        }
    ]
}